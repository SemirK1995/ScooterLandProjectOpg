@page "/kundekatalog"
@using ScooterLandProjectOpg.Shared.Models
@inject HttpClient Http
@using System.Text.Json
@using ScooterLandProjectOpg.Shared.Enum;


<div class="container my-4">
	<div class="card-header bg-primary text-white text-center">
		<h3 class="card-title">Kunde Katalog</h3>
	</div>



	@if (kunder == null)
	{
		<div class="text-center">
			<p class="text-muted">Loading...</p>
		</div>
	}
	else
	{
		<div class="text-center my-3">
			<button class="btn custom-btn" @onclick="VisOpretModal">Opret Kunde</button>
		</div>
		<style>
			.custom-btn {
				background: linear-gradient(to bottom, #4f81bd, #1f4e79); /* Samme gradient som boksen */
				color: white; /* Tekstfarve */
				border: none; /* Fjern kant */
				border-radius: 25px; /* Afrundede hjørner */
				padding: 10px 20px; /* Størrelse på knappen */
				font-size: 16px; /* Tekststørrelse */
				box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.2); /* Skygge */
				transition: all 0.3s ease-in-out; /* Glidende hover-effekt */
			}

				.custom-btn:hover {
					background: linear-gradient(to bottom, #1f4e79, #4f81bd); /* Omvendt gradient på hover */
					transform: scale(1.1); /* Gør knappen lidt større */
					box-shadow: 0px 6px 8px rgba(0, 0, 0, 0.3); /* Mere markant skygge */
				}
		</style>





		<table class="table table-striped table-hover">
			<thead class="table-primary">
				<tr>
					<th>ID</th>
					<th>Navn</th>
					<th>Email</th>
					<th>Telefon</th>
					<th>Adresse</th>
					<th>Scootere</th>
					<th>Handlinger</th>
				</tr>
			</thead>
			<tbody>
				@foreach (var kunde in kunder)
				{
					<tr>
						<td>@kunde.KundeId</td>
						<td>@kunde.Navn</td>
						<td>@kunde.Email</td>
						<td>@kunde.Telefonnummer</td>
						<td>@kunde.Adresse</td>
						<td>
							<button class="btn btn-link text-decoration-none" @onclick="() => ToggleScooterVisning(kunde.KundeId)">
								<i class="bi bi-eye-fill"></i> Vis Scootere
							</button>
						</td>
						<td>
							<div class="btn-group">
								<button class="btn btn-info" @onclick="() => ÅbnSidePanel(kunde.KundeId)">Se Ordrer</button>
								<button class="btn btn-primary" @onclick="() => VisRedigerModal(kunde)">Rediger</button>
								<button class="btn btn-secondary" @onclick="() => VisTilføjScooterModal(kunde)">Tilføj Scooter</button>
							</div>
						</td>
					</tr>

					@if (kundeScootere.TryGetValue(kunde.KundeId, out var scootere) && visScooterKundeId == kunde.KundeId)
					{
						<tr>
							<td colspan="7" class="bg-light">
								<table class="table table-bordered mt-3">
									<thead class="table-secondary">
										<tr>
											<th>Mærke</th>
											<th>Model</th>
											<th>Registreringsnummer</th>
										</tr>
									</thead>
									<tbody>
										@foreach (var scooter in scootere)
										{
											<tr>
												<td>@scooter.Maerke</td>
												<td>@scooter.Model</td>
												<td>@scooter.RegistreringsNummer</td>
											</tr>
										}
										@if (!scootere.Any())
										{
											<tr>
												<td colspan="3" class="text-center text-muted">Ingen scootere fundet for denne kunde.</td>
											</tr>
										}
									</tbody>
								</table>
							</td>
						</tr>
					}
				}
			</tbody>
		</table>
	}

	@if (visTilføjScooterModal)
	{
		<div class="modal fade show d-block" tabindex="-1" style="background-color: rgba(0, 0, 0, 0.5);">
			<div class="modal-dialog modal-dialog-centered">
				<div class="modal-content">
					<div class="modal-header bg-primary text-white">
						<h5 class="modal-title">Tilføj Scooter til @valgtKunde.Navn</h5>
						<button type="button" class="btn-close btn-close-white" @onclick="LukTilføjScooterModal"></button>
					</div>
					<div class="modal-body">
						<EditForm Model="nyScooter" OnValidSubmit="TilføjScooter">
							<DataAnnotationsValidator />
							<div class="mb-3">
								<label for="maerke" class="form-label">Mærke</label>
								<InputText @bind-Value="nyScooter.Maerke" id="maerke" class="form-control" placeholder="Indtast mærke" />
								<ValidationMessage For="@(() => nyScooter.Maerke)" />
							</div>
							<div class="mb-3">
								<label for="model" class="form-label">Model</label>
								<InputText @bind-Value="nyScooter.Model" id="model" class="form-control" placeholder="Indtast model" />
								<ValidationMessage For="@(() => nyScooter.Model)" />
							</div>
							<div class="mb-3">
								<label for="registreringsNummer" class="form-label">Registreringsnummer</label>
								<InputText @bind-Value="nyScooter.RegistreringsNummer" id="registreringsNummer" class="form-control" placeholder="Indtast registreringsnummer" />
								<ValidationMessage For="@(() => nyScooter.RegistreringsNummer)" />
							</div>
							<div class="mb-3">
								<label for="produktionsAar" class="form-label">Produktionsår</label>
								<InputNumber @bind-Value="nyScooter.ProduktionsAar" id="produktionsAar" class="form-control" placeholder="Indtast produktionsår" />
								<ValidationMessage For="@(() => nyScooter.ProduktionsAar)" />
							</div>
							<div class="d-flex justify-content-end">
								<button type="submit" class="btn btn-primary">Tilføj Scooter</button>
							</div>
						</EditForm>
					</div>
				</div>
			</div>
		</div>
	}
</div>



@if (visSidePanel)
{
	<div class="sidepanel bg-light shadow-sm position-fixed" style="width: 400px; top: 0; right: 0; height: 100%; overflow-y: auto; z-index: 1050;">
		<div class="sidepanel-header bg-primary text-white p-3 d-flex justify-content-between align-items-center">
			<h5 class="m-0">Kundeoplysninger</h5>
			<button class="btn-close btn-close-white" @onclick="LukSidePanel"></button>
		</div>
		<div class="sidepanel-body p-4">
			@if (søgeResultatKunde != null)
			{
				<div class="mb-4">
					<p><strong>Kunde ID:</strong> @søgeResultatKunde.KundeId</p>
					<p><strong>Navn:</strong> @søgeResultatKunde.Navn</p>
					<p><strong>Email:</strong> @søgeResultatKunde.Email</p>
					<p><strong>Telefon:</strong> @søgeResultatKunde.Telefonnummer</p>
					<p><strong>Adresse:</strong> @søgeResultatKunde.Adresse</p>
				</div>

				<h5 class="text-primary mb-3">Ordrer</h5>
				@if (søgeResultatKunde.Ordre != null && søgeResultatKunde.Ordre.Any())
				{
					<table class="table table-bordered">
						<thead class="table-light">
							<tr>
								<th>Ordre ID</th>
								<th>Dato</th>
								<th>Total Pris</th>
								<th>Status</th>
								<th>Handling</th>
							</tr>
						</thead>
						<tbody>
							@foreach (var ordre in søgeResultatKunde.Ordre)
							{
								<tr>
									<td>@ordre.OrdreId</td>
									<td>@(ordre.Dato.HasValue ? ordre.Dato.Value.ToString("dd-MM-yyyy") : "N/A")</td>
									<td>@ordre.TotalPris?.ToString("F2") kr.</td>
									<td>
										<div class="d-flex align-items-center">
											<select class="form-select form-select-sm me-2" @bind="ordre.Status">
												@foreach (var status in Enum.GetValues<OrdreStatus>())
												{
													<option value="@status">@status</option>
												}
											</select>
											<button class="btn btn-sm btn-primary" @onclick="() => OpdaterOrdreStatus(ordre)">Opdater</button>
										</div>
									</td>
									<td>
										<button class="btn btn-sm btn-info" @onclick="() => VisOrdreDetaljer(ordre.OrdreId)">Se Detaljer</button>
									</td>
								</tr>
							}
						</tbody>
					</table>
				}
				else
				{
					<p class="text-muted">Kunden har ingen ordrer.</p>
				}
			}
			else
			{
				<p>Indlæser kundeoplysninger...</p>
			}
		</div>
	</div>
}
@if (visOrdreDetaljerModal)
{
	<div class="modal fade show d-block" tabindex="-1" style="background-color: rgba(0, 0, 0, 0.5);">
		<div class="modal-dialog modal-lg">
			<div class="modal-content">
				<div class="modal-header bg-primary text-white">
					<h5 class="modal-title">Ordre Detaljer (Ordre ID: @valgtOrdre.OrdreId)</h5>
					<button type="button" class="btn-close btn-close-white" @onclick="LukOrdreDetaljerModal"></button>
				</div>
				<div class="modal-body">
					<!-- Ordre Ydelser -->
					<h5 class="text-primary mb-3">Ydelser</h5>
					@if (valgtOrdre.OrdreYdelse != null && valgtOrdre.OrdreYdelse.Any())
					{
						<table class="table table-bordered">
							<thead class="table-light">
								<tr>
									<th>Ydelse</th>
									<th>Pris</th>
									<th>Scooter</th>
								</tr>
							</thead>
							<tbody>
								@foreach (var ydelse in valgtOrdre.OrdreYdelse)
								{
									<tr>
										<td>@ydelse.Ydelse?.Navn</td>
										<td>@ydelse.BeregnetPris.ToString("F2") kr.</td>
										<td>@ydelse.Scooter?.Maerke @ydelse.Scooter?.Model</td>
									</tr>
								}
							</tbody>
						</table>
					}
					else
					{
						<p class="text-muted">Ingen ydelser tilføjet.</p>
					}

					<!-- Ordre Produkter -->
					<h5 class="text-primary mb-3">Produkter</h5>
					@if (valgtOrdre.OrdreProdukter != null && valgtOrdre.OrdreProdukter.Any())
					{
						<table class="table table-bordered">
							<thead class="table-light">
								<tr>
									<th>Produkt</th>
									<th>Antal</th>
									<th>Pris pr. enhed</th>
									<th>Total</th>
								</tr>
							</thead>
							<tbody>
								@foreach (var produkt in valgtOrdre.OrdreProdukter)
								{
									<tr>
										<td>@produkt.Produkt?.ProduktNavn</td>
										<td>@produkt.Antal</td>
										<td>@produkt.Pris.ToString("F2") kr.</td>
										<td>@(produkt.Antal * produkt.Pris).ToString("F2") kr.</td>
									</tr>
								}
							</tbody>
						</table>
					}
					else
					{
						<p class="text-muted">Ingen produkter tilknyttet denne ordre.</p>
					}

					<!-- Lejeaftale -->
					<h5 class="text-primary mb-3">Lejeaftale</h5>
					@if (valgtOrdre.LejeAftale != null)
					{
						<div class="mb-3">
							<p><strong>Startdato:</strong> @valgtOrdre.LejeAftale.StartDato?.ToString("dd-MM-yyyy")</p>
							<p><strong>Slutdato:</strong> @valgtOrdre.LejeAftale.SlutDato?.ToString("dd-MM-yyyy")</p>
							<p><strong>Daglig Leje:</strong> @valgtOrdre.LejeAftale.DagligLeje kr.</p>
							<p><strong>Forsikringspris:</strong> @valgtOrdre.LejeAftale.ForsikringsPris kr.</p>
							<p><strong>Kilometer pris:</strong> @valgtOrdre.LejeAftale.KilometerPris kr.</p>
							<p><strong>Antal kørte Km:</strong> @valgtOrdre.LejeAftale.KortKilometer Km.</p>
							<p><strong>Selvrisiko:</strong> @valgtOrdre.LejeAftale.Selvrisiko Kr.</p>
						</div>
						<h6 class="text-primary">Scootere</h6>
						@if (valgtOrdre.LejeAftale.LejeScooter != null && valgtOrdre.LejeAftale.LejeScooter.Any())
						{
							<ul class="list-unstyled">
								@foreach (var scooter in valgtOrdre.LejeAftale.LejeScooter)
								{
									<li>🛵 @scooter.ScooterMaerke @scooter.ScooterModel</li>
								}
							</ul>
						}
						else
						{
							<p class="text-muted">Ingen scootere knyttet til lejeaftalen.</p>
						}
					}
					else
					{
						<p class="text-muted">Ingen lejeaftale knyttet til denne ordre.</p>
					}

					<!-- Total Pris -->
					<h5 class="text-primary mt-4">Total Pris</h5>
					<p class="fs-5"><strong>@valgtOrdre.TotalOrdrePris.ToString("F2") kr.</strong></p>
				</div>
				<div class="modal-footer">
					<button class="btn btn-secondary" @onclick="LukOrdreDetaljerModal">Luk</button>
				</div>
			</div>
		</div>
	</div>
}
@if (visModal)
{
	<div class="modal fade show d-block" tabindex="-1" style="background-color: rgba(0, 0, 0, 0.5);">
		<div class="modal-dialog modal-lg">
			<div class="modal-content">
				<div class="modal-header bg-primary text-white">
					<h5 class="modal-title">@modalTitel</h5>
					<button type="button" class="btn-close btn-close-white" @onclick="LukModal"></button>
				</div>
				<div class="modal-body">
					<EditForm Model="valgtKunde" OnValidSubmit="GemKunde">
						<DataAnnotationsValidator />
						<div class="row">
							<!-- Navn -->
							<div class="col-md-6 mb-3">
								<label for="navn" class="form-label"><strong>Navn:</strong></label>
								<InputText id="navn" @bind-Value="valgtKunde.Navn" class="form-control" />
								<ValidationMessage For="@(() => valgtKunde.Navn)" />
							</div>
							<!-- Email -->
							<div class="col-md-6 mb-3">
								<label for="email" class="form-label"><strong>Email:</strong></label>
								<InputText id="email" @bind-Value="valgtKunde.Email" class="form-control" />
								<ValidationMessage For="@(() => valgtKunde.Email)" />
							</div>
						</div>
						<div class="row">
							<!-- Telefon -->
							<div class="col-md-6 mb-3">
								<label for="telefon" class="form-label"><strong>Telefon:</strong></label>
								<InputNumber id="telefon" @bind-Value="valgtKunde.Telefonnummer" class="form-control" />
								<ValidationMessage For="@(() => valgtKunde.Telefonnummer)" />
							</div>
							<!-- Adresse -->
							<div class="col-md-6 mb-3">
								<label for="adresse" class="form-label"><strong>Adresse:</strong></label>
								<InputText id="adresse" @bind-Value="valgtKunde.Adresse" class="form-control" />
								<ValidationMessage For="@(() => valgtKunde.Adresse)" />
							</div>
						</div>
						<div class="modal-footer mt-3">
							<button class="btn btn-primary" type="submit">Gem</button>
							<button class="btn btn-danger" @onclick="VisBekræftSletModal">Slet</button>
						</div>
					</EditForm>
				</div>
			</div>
		</div>
	</div>
}
@if (visBekræftSletModal)
{
	<div class="modal fade show d-block" tabindex="-1" style="background-color: rgba(0, 0, 0, 0.5);">
		<div class="modal-dialog modal-sm">
			<div class="modal-content">
				<div class="modal-header bg-danger text-white">
					<h5 class="modal-title">Bekræft Sletning</h5>
					<button type="button" class="btn-close btn-close-white" @onclick="LukBekræftSletModal"></button>
				</div>
				<div class="modal-body text-center">
					<p class="fw-bold">Er du sikker på, at du vil slette kunden?</p>
					<p class="text-danger"><strong>@valgtKunde.Navn</strong></p>
				</div>
				<div class="modal-footer d-flex justify-content-between">
					<button class="btn btn-secondary w-45" @onclick="LukBekræftSletModal">Annuller</button>
					<button class="btn btn-danger w-45" @onclick="SletBekræftetKunde">Ja, Slet</button>
				</div>
			</div>
		</div>
	</div>
}
<div class="d-flex justify-content-center align-items-center position-relative mt-4" style="height: auto;">
	<div class="card shadow-sm border-0" style="max-width: 600px; width: 90%;">
		<div class="card-body text-center">
			<h5 class="card-title text-primary fw-bold">Scooterland</h5>
			<p class="card-text">
				<strong>Adresse:</strong> Hovedgade 123, 4000 Roskilde<br />
				<strong>Telefon:</strong> 12 34 56 78<br />
				<strong>Email:</strong> <a href="mailto:kontakt@scooterland.dk" class="text-decoration-none">kontakt@scooterland.dk</a><br />
				<strong>Dags dato:</strong> @DateTime.Now.ToString("dd-MM-yyyy")
			</p>
		</div>
	</div>
</div>
<style>
	.sidepanel {
		position: fixed;
		right: 0;
		top: 0;
		height: 100%;
		width: 400px;
		background-color: #f8f9fa;
		box-shadow: -3px 0px 10px rgba(0, 0, 0, 0.3);
		overflow-y: auto;
		padding: 20px;
		z-index: 1050;
	}
</style>




@code {
	private List<Kunde> kunder = new();
	private Kunde valgtKunde = new();
	private Kunde kundeTilSletning = new();
	private Kunde søgeResultatKunde = new();
	private KundeScooter nyScooter = new();
	private bool visTilføjScooterModal = false;
	private bool visModal = false;
	private bool visSidePanel = false;
	private string modalTitel = "";
	private int søgeKundeId;
	private bool visBekræftSletModal = false;


	private int valgtOrdreId; // Gemmer det valgte ordre-ID
	private Ordre? valgtOrdre; // Indeholder detaljer om den valgte ordre
	private bool visOrdreDetaljerModal; // Styrer modalens synlighed
	private Dictionary<int, List<KundeScooter>> kundeScootere = new(); // Holder scootere for hver kunde
	private int? visScooterKundeId = null;


	private async Task ToggleScooterVisning(int kundeId)
	{
		if (visScooterKundeId == kundeId)
		{
			visScooterKundeId = null; // Skjul
		}
		else
		{
			try
			{
				// Hent scootere for kunden fra serveren
				var scootere = await Http.GetFromJsonAsync<List<KundeScooter>>($"api/KundeScooter/{kundeId}/scootere");
				kundeScootere[kundeId] = scootere ?? new List<KundeScooter>();
				visScooterKundeId = kundeId; // Vis for valgt kunde
			}
			catch (Exception ex)
			{
				Console.WriteLine($"Fejl ved hentning af scootere for kunde {kundeId}: {ex.Message}");
				kundeScootere[kundeId] = new List<KundeScooter>();
			}
		}
	}

	protected override async Task OnInitializedAsync()
	{
		await HentAlleKunder(); // Hent kun kunder
	}

	private async Task HentAlleKunder()
	{
		try
		{
			kunder = await Http.GetFromJsonAsync<List<Kunde>>("api/Kunde");
		}
		catch (Exception ex)
		{
			Console.WriteLine($"Fejl ved hentning af kunder: {ex.Message}");
			kunder = new List<Kunde>();
		}
	}

	private async Task ÅbnSidePanel(int kundeId)
	{
		søgeKundeId = kundeId;
		visSidePanel = true;
		await HentKundeDetaljer(kundeId);
	}
	private void VisBekræftSletModal()
	{
		kundeTilSletning = valgtKunde;
		visBekræftSletModal = true;
	}

	private void LukBekræftSletModal()
	{
		visBekræftSletModal = false;
	}



	private async Task HentKundeDetaljer(int kundeId)
	{
		try
		{
			søgeResultatKunde = await Http.GetFromJsonAsync<Kunde>($"api/Kunde/{kundeId}/details");
		}
		catch (Exception ex)
		{
			Console.WriteLine($"Fejl ved hentning af kundeoplysninger: {ex.Message}");
		}
	}


	private void VisTilføjScooterModal(Kunde kunde)
	{
		valgtKunde = kunde; // Indstil den valgte kunde
		nyScooter = new KundeScooter(); // Nulstil scooterdetaljer
		visTilføjScooterModal = true; // Vis modalvindue
	}
	private void LukTilføjScooterModal()
	{
		visTilføjScooterModal = false; // Skjul modalvindue
	}
	private async Task TilføjScooter()
	{
		try
		{
			// Indstil kundeId til scooteren
			nyScooter.KundeId = valgtKunde.KundeId;

			// Send scooter til API'et
			var response = await Http.PostAsJsonAsync($"api/KundeScooter/{valgtKunde.KundeId}/add-scooter", nyScooter);

			if (response.IsSuccessStatusCode)
			{
				// Vis succesbesked eller opdater data
				await HentAlleKunder();
				LukTilføjScooterModal();
			}
			else
			{
				// Håndter fejl
				Console.WriteLine("Fejl ved oprettelse af scooter.");
			}
		}
		catch (Exception ex)
		{
			Console.WriteLine($"En fejl opstod: {ex.Message}");
		}
	}

	private void LukSidePanel()
	{
		visSidePanel = false;
	}

	private void VisOpretModal()
	{
		valgtKunde = new Kunde();
		modalTitel = "Opret Kunde";
		visModal = true;
	}

	private void VisRedigerModal(Kunde kunde)
	{
		valgtKunde = kunde;
		modalTitel = "Rediger Kunde";
		visModal = true;
	}

	private async Task GemKunde()
	{
		if (valgtKunde.KundeId == 0)
		{
			await Http.PostAsJsonAsync("api/Kunde", valgtKunde);
		}
		else
		{
			await Http.PutAsJsonAsync($"api/Kunde/{valgtKunde.KundeId}", valgtKunde);
		}
		await HentAlleKunder();
		LukModal();
	}

	private void LukModal()
	{
		visModal = false;
	}


	// private async Task SletBekræftetKunde()
	// {
	// 	await Http.DeleteAsync($"api/Kunde/{kundeTilSletning.KundeId}");
	// 	await HentAlleKunder();
	// 	visModal = false; // Luk redigeringsvinduet
	// 	visBekræftSletModal = false; // Luk bekræftelsesmodalen
	// }
	private async Task SletBekræftetKunde()
	{
		try
		{
			// Send DELETE-anmodning til API
			var response = await Http.DeleteAsync($"api/Kunde/{kundeTilSletning.KundeId}");

			if (response.IsSuccessStatusCode)
			{
				// Fjern kunden midlertidigt fra listen
				kunder.Remove(kundeTilSletning);

				// Opdater listen fra serveren i baggrunden
				await HentAlleKunder();

				// Luk modal
				LukBekræftSletModal();
			}
			else
			{
				// Håndter fejl
				var fejl = await response.Content.ReadAsStringAsync();
				Console.WriteLine($"Fejl ved sletning: {fejl}");
			}
		}
		catch (Exception ex)
		{
			Console.WriteLine($"Fejl ved sletning af kunde: {ex.Message}");
		}
	}




	private async Task OpdaterOrdreStatus(Ordre ordre)
	{
		var response = await Http.PutAsJsonAsync($"api/Ordre/{ordre.OrdreId}/status", ordre.Status);
		if (response.IsSuccessStatusCode)
		{
			Console.WriteLine($"Ordrestatus for ID {ordre.OrdreId} opdateret til {ordre.Status}.");
		}
		else
		{
			Console.WriteLine("Fejl ved opdatering af ordrestatus.");
		}
	}

	private async Task VisOrdreDetaljer(int ordreId)
	{
		try
		{
			valgtOrdre = søgeResultatKunde.Ordre
				.FirstOrDefault(o => o.OrdreId == ordreId);

			if (valgtOrdre == null)
			{
				Console.WriteLine($"Ingen ordre fundet med ID {ordreId}.");
				return;
			}

			// Hent detaljer om ordreprodukter, hvis nødvendigt
			if (valgtOrdre.OrdreProdukter == null || !valgtOrdre.OrdreProdukter.Any())
			{
				var response = await Http.GetFromJsonAsync<Ordre>($"api/Ordre/{ordreId}");
				if (response != null)
				{
					valgtOrdre = response; // Opdater valgt ordre med detaljer fra server
				}
			}

			visOrdreDetaljerModal = true; // Åbn modal
		}
		catch (Exception ex)
		{
			Console.WriteLine($"Fejl ved hentning af ordredetaljer: {ex.Message}");
		}
	}

	private void LukOrdreDetaljerModal()
	{
		visOrdreDetaljerModal = false;

	}



}
