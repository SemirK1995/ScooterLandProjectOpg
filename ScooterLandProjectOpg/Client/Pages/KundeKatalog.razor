@page "/kundekatalog"
@using ScooterLandProjectOpg.Shared.Models
@inject HttpClient Http
@using System.Text.Json
@using ScooterLandProjectOpg.Shared.Enum;

<h3>Kunde Katalog</h3>

@if (kunder == null)
{
	<p>Loading...</p>
}
else
{
	<button class="btn btn-success mb-3" @onclick="VisOpretModal">Opret Kunde</button>

	<table class="table">
		<thead>
			<tr>
				<th>ID</th>
				<th>Navn</th>
				<th>Email</th>
				<th>Telefon</th>
				<th>Adresse</th>
				<th>Handlinger</th>
			</tr>
		</thead>
		<tbody>
			@foreach (var kunde in kunder)
			{
				<tr>
					<td>@kunde.KundeId</td>
					<td>@kunde.Navn</td>
					<td>@kunde.Email</td>
					<td>@kunde.Telefonnummer</td>
					<td>@kunde.Adresse</td>
					<td>
						<button class="btn btn-info" @onclick="() => ÅbnSidePanel(kunde.KundeId)">Se Ordrer</button>
						<button class="btn btn-primary" @onclick="() => VisRedigerModal(kunde)">Rediger</button>
						<button class="btn btn-danger" @onclick="() => VisSletModal(kunde)">Slet</button>
						<button class="btn btn-secondary" @onclick="() => VisTilføjScooterModal(kunde)">Tilføj Scooter</button>
					</td>
				</tr>
			}
		</tbody>
	</table>
}
@if (visTilføjScooterModal)
{
	<div class="modal fade show d-block" tabindex="-1" style="background-color: rgba(0, 0, 0, 0.5);">
		<div class="modal-dialog">
			<div class="modal-content">
				<div class="modal-header">
					<h5 class="modal-title">Tilføj Scooter til @valgtKunde.Navn</h5>
					<button type="button" class="btn-close" @onclick="LukTilføjScooterModal"></button>
				</div>
				<div class="modal-body">
					<EditForm Model="nyScooter" OnValidSubmit="TilføjScooter">
						<DataAnnotationsValidator />
						<div class="mb-3">
							<label for="maerke">Mærke:</label>
							<InputText @bind-Value="nyScooter.Maerke" id="maerke" class="form-control" placeholder="Indtast mærke" />
						</div>
						<div class="mb-3">
							<label for="model">Model:</label>
							<InputText @bind-Value="nyScooter.Model" id="model" class="form-control" placeholder="Indtast model" />
						</div>
						<div class="mb-3">
							<label for="registreringsNummer">Registreringsnummer:</label>
							<InputText @bind-Value="nyScooter.RegistreringsNummer" id="registreringsNummer" class="form-control" placeholder="Indtast registreringsnummer" />
						</div>
						<div class="mb-3">
							<label for="produktionsAar">Produktionsår:</label>
							<InputNumber @bind-Value="nyScooter.ProduktionsAar" id="produktionsAar" class="form-control" placeholder="Indtast produktionsår" />
						</div>
						<button type="submit" class="btn btn-primary">Tilføj Scooter</button>
					</EditForm>
				</div>
			</div>
		</div>
	</div>
}


<!-- Sidepanel -->
@if (visSidePanel)
{
	<div class="sidepanel">
		<div class="sidepanel-header">
			<h4>Kundeoplysninger</h4>
			<button class="btn-close" @onclick="LukSidePanel">X</button>
		</div>
		<div class="sidepanel-body">
			@if (søgeResultatKunde != null)
			{
				<p><strong>Kunde ID:</strong> @søgeResultatKunde.KundeId</p>
				<p><strong>Navn:</strong> @søgeResultatKunde.Navn</p>
				<p><strong>Email:</strong> @søgeResultatKunde.Email</p>
				<p><strong>Telefon:</strong> @søgeResultatKunde.Telefonnummer</p>
				<p><strong>Adresse:</strong> @søgeResultatKunde.Adresse</p>


				<h5>Ordrer:</h5>
				@if (søgeResultatKunde.Ordre != null && søgeResultatKunde.Ordre.Any())
				{
					<table class="table">
						<thead>
							<tr>
								<th>Ordre ID</th>
								<th>Dato</th>
								<th>Total Pris</th>
								<th>Status</th>
								<th>Handling</th>
							</tr>
						</thead>
						<tbody>
							@foreach (var ordre in søgeResultatKunde.Ordre)
							{
								<tr>
									<td>@ordre.OrdreId</td>
									<td>@(ordre.Dato.HasValue ? ordre.Dato.Value.ToString("dd-MM-yyyy") : "N/A")</td>
									<td>@ordre.TotalPris?.ToString("F2") kr.</td>
									<td>
									<td>
										<select class="form-control" @bind="ordre.Status">
												@foreach (var status in Enum.GetValues<OrdreStatus>())
												{
												<option value="@status">@status</option>
												}
										</select>
										<button class="btn btn-primary" @onclick="() => OpdaterOrdreStatus(ordre)">Opdater</button>
									</td>


									</td>
									<td>
										<button class="btn btn-info" @onclick="() => VisOrdreDetaljer(ordre.OrdreId)">Se Detaljer</button>
									</td>
								</tr>
							}
						</tbody>
					</table>
				}
				else
				{
					<p>Kunden har ingen ordrer.</p>
				}
			}
			else
			{
				<p>Indlæser kundeoplysninger...</p>
			}
		</div>
	</div>
}
<!-- Modal for ordre detaljer -->
@if (visOrdreDetaljerModal)
{
	<div class="modal fade show d-block" tabindex="-1" style="background-color: rgba(0, 0, 0, 0.5);">
		<div class="modal-dialog modal-lg">
			<div class="modal-content">
				<div class="modal-header">
					<h5 class="modal-title">Ordre Detaljer (Ordre ID: @valgtOrdre.OrdreId)</h5>
					<button type="button" class="btn-close" @onclick="LukOrdreDetaljerModal"></button>
				</div>
				<div class="modal-body">
					<h6>Ydelser:</h6>
					@if (valgtOrdre.OrdreYdelse != null && valgtOrdre.OrdreYdelse.Any())
					{
						<table class="table">
							<thead>
								<tr>
									<th>Ydelse</th>
									<th>Pris</th>
									<th>Scooter</th>
								</tr>
							</thead>
							<tbody>
								@foreach (var ydelse in valgtOrdre.OrdreYdelse)
								{
									<tr>
										<td>@ydelse.Ydelse?.Navn</td>
										<td>@ydelse.BeregnetPris.ToString("F2") kr.</td>
										<td>@ydelse.Scooter?.Maerke @ydelse.Scooter?.Model</td>
									</tr>
								}
							</tbody>
						</table>
					}
					else
					{
						<p>Ingen ydelser tilføjet.</p>
					}

					<h6>Lejeaftale:</h6>
					@if (valgtOrdre.LejeAftale != null)
					{
						<p><strong>Startdato:</strong> @valgtOrdre.LejeAftale.StartDato?.ToString("dd-MM-yyyy")</p>
						<p><strong>Slutdato:</strong> @valgtOrdre.LejeAftale.SlutDato?.ToString("dd-MM-yyyy")</p>
						<p><strong>Daglig Leje:</strong> @valgtOrdre.LejeAftale.DagligLeje kr.</p>
						<p><strong>Forsikringspris:</strong> @valgtOrdre.LejeAftale.ForsikringsPris kr.</p>
						<p><strong>Kilometer pris:</strong> @valgtOrdre.LejeAftale.KilometerPris kr.</p>
						<p><strong>Antal kørte Km:</strong> @valgtOrdre.LejeAftale.KortKilometer Km.</p>

						<h6>Scootere:</h6>
						@if (valgtOrdre.LejeAftale.LejeScooter != null && valgtOrdre.LejeAftale.LejeScooter.Any())
						{
							<ul>
								@foreach (var scooter in valgtOrdre.LejeAftale.LejeScooter)
								{
									<li>@scooter.ScooterMaerke @scooter.ScooterModel</li>
								}
							</ul>
						}
						else
						{
							<p>Ingen scootere knyttet til lejeaftalen.</p>
						}
					}
					else
					{
						<p>Ingen lejeaftale knyttet til denne ordre.</p>
					}
					<h6>Total Pris:</h6>
					<p><strong>@valgtOrdre.TotalOrdrePris.ToString("F2") kr.</strong></p>

					<h6>Tilføj/Fjern Selvrisiko:</h6>
					<button class="btn btn-warning" @onclick="async () => await TilføjSelvrisiko(valgtOrdre.OrdreId)">
						Tilføj Selvrisiko (1000 kr.)
					</button>
					<button class="btn btn-danger" @onclick="async () => await FjernSelvrisiko(valgtOrdre.OrdreId)">
						Fjern Selvrisiko
					</button>

				</div>
				<div class="modal-footer">
					<button class="btn btn-secondary" @onclick="LukOrdreDetaljerModal">Luk</button>
				</div>
			</div>
		</div>
	</div>
}


<!-- Modal for oprettelse/redigering -->
@if (visModal)
{
	<div class="modal fade show d-block" tabindex="-1" style="background-color: rgba(0, 0, 0, 0.5);">
		<div class="modal-dialog">
			<div class="modal-content">
				<div class="modal-header">
					<h5 class="modal-title">@modalTitel</h5>
					<button type="button" class="btn-close" @onclick="LukModal"></button>
				</div>
				<div class="modal-body">
					<EditForm Model="valgtKunde" OnValidSubmit="GemKunde">
						<DataAnnotationsValidator />
						<div>
							<label>Navn:</label>
							<InputText @bind-Value="valgtKunde.Navn" class="form-control" />
						</div>
						<div>
							<label>Email:</label>
							<InputText @bind-Value="valgtKunde.Email" class="form-control" />
						</div>
						<div>
							<label>Telefon:</label>
							<InputNumber @bind-Value="valgtKunde.Telefonnummer" class="form-control" />
						</div>
						<div>
							<label>Adresse:</label>
							<InputText @bind-Value="valgtKunde.Adresse" class="form-control" />
						</div>
						<div>
						</div>
						<button class="btn btn-primary" type="submit">Gem</button>
					</EditForm>
				</div>
			</div>
		</div>
	</div>
}

<!-- Modal for sletning -->
@if (visSletModal)
{
	<div class="modal fade show d-block" tabindex="-1" style="background-color: rgba(0, 0, 0, 0.5);">
		<div class="modal-dialog">
			<div class="modal-content">
				<div class="modal-header">
					<h5 class="modal-title">Bekræft Sletning</h5>
					<button type="button" class="btn-close" @onclick="LukSletModal"></button>
				</div>
				<div class="modal-body">
					<p>Er du sikker på, at du vil slette kunden "@kundeTilSletning.Navn"?</p>
				</div>
				<div class="modal-footer">
					<button class="btn btn-danger" @onclick="SletBekræftetKunde">Ja, Slet</button>
					<button class="btn btn-secondary" @onclick="LukSletModal">Annuller</button>
				</div>
			</div>
		</div>
	</div>
}
<div class="d-flex justify-content-center align-items-center position-relative mt-4" style="height: 150px;">
	<div class="alert alert-light border rounded-3 shadow-sm text-center"
		 style="max-width: 600px; width: 90%; padding: 15px; margin-bottom: 0;">
		<h6 class="text-primary fw-bold mb-2">Scooterland</h6>
		<p class="mb-1"><strong>Adresse:</strong> Hovedgade 123, 4000 Roskilde</p>
		<p class="mb-1"><strong>Telefon:</strong> 12 34 56 78</p>
		<p class="mb-1"><strong>Email:</strong> kontakt@scooterland.dk</p>
		<p class="mb-0"><strong>Dags dato:</strong> @DateTime.Now.ToString("dd-MM-yyyy")</p>
	</div>
</div>

<style>
	.sidepanel {
		position: fixed;
		right: 0;
		top: 0;
		height: 100%;
		width: 400px;
		background-color: #f8f9fa;
		box-shadow: -3px 0px 10px rgba(0, 0, 0, 0.3);
		overflow-y: auto;
		padding: 20px;
		z-index: 1050;
	}
</style>

@code {
	private List<Kunde> kunder = new();
	private Kunde valgtKunde = new();
	private Kunde kundeTilSletning = new();
	private Kunde søgeResultatKunde = new();
	private KundeScooter nyScooter = new();
	private bool visTilføjScooterModal = false;
	private bool visModal = false;
	private bool visSidePanel = false;
	private bool visSletModal = false;
	private string modalTitel = "";
	private int søgeKundeId;

	private int valgtOrdreId; // Gemmer det valgte ordre-ID
	private Ordre? valgtOrdre; // Indeholder detaljer om den valgte ordre
	private bool visOrdreDetaljerModal; // Styrer modalens synlighed

	protected override async Task OnInitializedAsync()
	{
		await HentAlleKunder();
	}

	private async Task HentAlleKunder()
	{
		kunder = await Http.GetFromJsonAsync<List<Kunde>>("api/Kunde");
	}

	private async Task ÅbnSidePanel(int kundeId)
	{
		søgeKundeId = kundeId;
		visSidePanel = true;
		await HentKundeDetaljer(kundeId);
	}



	private async Task HentKundeDetaljer(int kundeId)
	{
		try
		{
			søgeResultatKunde = await Http.GetFromJsonAsync<Kunde>($"api/Kunde/{kundeId}/details");
		}
		catch (Exception ex)
		{
			Console.WriteLine($"Fejl ved hentning af kundeoplysninger: {ex.Message}");
		}
	}


	private void VisTilføjScooterModal(Kunde kunde)
	{
		valgtKunde = kunde; // Indstil den valgte kunde
		nyScooter = new KundeScooter(); // Nulstil scooterdetaljer
		visTilføjScooterModal = true; // Vis modalvindue
	}
	private void LukTilføjScooterModal()
	{
		visTilføjScooterModal = false; // Skjul modalvindue
	}
	private async Task TilføjScooter()
	{
		try
		{
			// Indstil kundeId til scooteren
			nyScooter.KundeId = valgtKunde.KundeId;

			// Send scooter til API'et
			var response = await Http.PostAsJsonAsync($"api/KundeScooter/{valgtKunde.KundeId}/add-scooter", nyScooter);

			if (response.IsSuccessStatusCode)
			{
				// Vis succesbesked eller opdater data
				await HentAlleKunder();
				LukTilføjScooterModal();
			}
			else
			{
				// Håndter fejl
				Console.WriteLine("Fejl ved oprettelse af scooter.");
			}
		}
		catch (Exception ex)
		{
			Console.WriteLine($"En fejl opstod: {ex.Message}");
		}
	}

	private void LukSidePanel()
	{
		visSidePanel = false;
	}

	private void VisOpretModal()
	{
		valgtKunde = new Kunde();
		modalTitel = "Opret Kunde";
		visModal = true;
	}

	private void VisRedigerModal(Kunde kunde)
	{
		valgtKunde = kunde;
		modalTitel = "Rediger Kunde";
		visModal = true;
	}

	private async Task GemKunde()
	{
		if (valgtKunde.KundeId == 0)
		{
			await Http.PostAsJsonAsync("api/Kunde", valgtKunde);
		}
		else
		{
			await Http.PutAsJsonAsync($"api/Kunde/{valgtKunde.KundeId}", valgtKunde);
		}
		await HentAlleKunder();
		LukModal();
	}

	private void LukModal()
	{
		visModal = false;
	}

	private void VisSletModal(Kunde kunde)
	{
		kundeTilSletning = kunde;
		visSletModal = true;
	}

	private async Task SletBekræftetKunde()
	{
		await Http.DeleteAsync($"api/Kunde/{kundeTilSletning.KundeId}");
		await HentAlleKunder();
		LukSletModal();
	}

	private void LukSletModal()
	{
		visSletModal = false;
	}

	private async Task OpdaterOrdreStatus(Ordre ordre)
	{
		var response = await Http.PutAsJsonAsync($"api/Ordre/{ordre.OrdreId}/status", ordre.Status);
		if (response.IsSuccessStatusCode)
		{
			Console.WriteLine($"Ordrestatus for ID {ordre.OrdreId} opdateret til {ordre.Status}.");
		}
		else
		{
			Console.WriteLine("Fejl ved opdatering af ordrestatus.");
		}
	}

	private async Task TilføjSelvrisiko(int ordreId)
	{
		var response = await Http.PutAsync($"api/Ordre/{ordreId}/selvrisiko", null);
		if (response.IsSuccessStatusCode)
		{
			Console.WriteLine($"Selvrisiko tilføjet til ordre ID {ordreId}.");
			await HentKundeDetaljer(søgeKundeId); // Opdater data
		}
		else
		{
			Console.WriteLine("Fejl ved tilføjelse af selvrisiko.");
		}
	}

	private async Task FjernSelvrisiko(int ordreId)
	{
		try
		{
			var response = await Http.PutAsync($"api/Ordre/{ordreId}/remove-selvrisiko", null);
			if (response.IsSuccessStatusCode)
			{
				Console.WriteLine($"Selvrisiko fjernet fra ordre ID {ordreId}.");
				await HentKundeDetaljer(søgeKundeId); // Opdater data i sidepanelet
			}
			else
			{
				Console.WriteLine($"Fejl ved fjernelse af selvrisiko for ordre ID {ordreId}.");
			}
		}
		catch (Exception ex)
		{
			Console.WriteLine($"En fejl opstod: {ex.Message}");
		}
	}

	private async Task VisOrdreDetaljer(int ordreId)
	{
		try
		{
			valgtOrdre = søgeResultatKunde.Ordre.FirstOrDefault(o => o.OrdreId == ordreId);
			if (valgtOrdre == null)
			{
				Console.WriteLine($"Ingen ordre fundet med ID {ordreId}.");
				return;
			}

			visOrdreDetaljerModal = true; // Åbn modal
		}
		catch (Exception ex)
		{
			Console.WriteLine($"Fejl ved hentning af ordredetaljer: {ex.Message}");
		}
	}

	private void LukOrdreDetaljerModal()
	{
		visOrdreDetaljerModal = false;

	}
}
