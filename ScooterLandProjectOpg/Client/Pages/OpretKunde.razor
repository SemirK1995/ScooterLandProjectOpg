@page "/opretkunde"
@using ScooterLandProjectOpg.Shared.Models
@inject HttpClient Http

<div class="container mt-4">
    <div class="card">
        <div class="card-header bg-primary text-white">
            <h3>Opret Kunde</h3>
        </div>
        <div class="card-body">
            <EditForm Model="nyKunde" OnValidSubmit="VisBekræftelsesDialog">
                <DataAnnotationsValidator />
                <div class="row">
                    <div class="col-md-6 mb-3">
                        <label for="navn" class="form-label">Navn:</label>
                        <InputText @bind-Value="nyKunde.Navn" id="navn" class="form-control" placeholder="Indtast navn" />
                        <ValidationMessage For="@(() => nyKunde.Navn)" />
                    </div>
                    <div class="col-md-6 mb-3">
                        <label for="email" class="form-label">Email:</label>
                        <InputText @bind-Value="nyKunde.Email" id="email" class="form-control" placeholder="Indtast email" />
                        <ValidationMessage For="@(() => nyKunde.Email)" />
                    </div>
                    <div class="col-md-6 mb-3">
                        <label for="telefon" class="form-label">Telefon:</label>
                        <InputNumber @bind-Value="nyKunde.Telefonnummer" id="telefon" class="form-control" placeholder="Indtast telefonnummer" />
                        <ValidationMessage For="@(() => nyKunde.Telefonnummer)" />
                    </div>
                    <div class="col-md-6 mb-3">
                        <label for="adresse" class="form-label">Adresse:</label>
                        <InputText @bind-Value="nyKunde.Adresse" id="adresse" class="form-control" placeholder="Indtast adresse" />
                        <ValidationMessage For="@(() => nyKunde.Adresse)" />
                    </div>
                </div>

                <h4 class="mt-4">Tilføj Scootere</h4>
                @if (scootere.Any())
                {
                    <table class="table table-bordered mt-3">
                        <thead class="table-light">
                            <tr>
                                <th>Mærke</th>
                                <th>Model</th>
                                <th>Registreringsnummer</th>
                                <th>Produktionsår</th>
                                <th>Handling</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var scooter in scootere)
                            {
                                <tr>
                                    <td>
                                        <InputText @bind-Value="scooter.Maerke" class="form-control" />
                                    </td>
                                    <td>
                                        <InputText @bind-Value="scooter.Model" class="form-control" />
                                    </td>
                                    <td>
                                        <InputText @bind-Value="scooter.RegistreringsNummer" class="form-control" />
                                        <ValidationMessage For="@(() => scooter.RegistreringsNummer)" />
                                    </td>
                                    <td>
                                        <InputNumber @bind-Value="scooter.ProduktionsAar" class="form-control" />
                                        <ValidationMessage For="@(() => scooter.ProduktionsAar)" />
                                    </td>
                                    <td>
                                        <button class="btn btn-danger btn-sm" @onclick="() => FjernScooter(scooter)">Fjern</button>
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                }
                else
                {
                    <p class="text-muted">Ingen scootere tilføjet endnu.</p>
                }

                <div class="d-flex mt-3">
                    <button type="button" class="btn btn-secondary me-2" @onclick="TilføjScooter">Tilføj Scooter</button>
                    <button type="submit" class="btn btn-primary ms-2">Opret Kunde</button>
                </div>
            </EditForm>
        </div>
    </div>
</div>

<!-- Bekræftelsesdialog -->
@if (visBekræftelse)
{
    <div class="modal fade show d-block" tabindex="-1" style="background-color: rgba(0, 0, 0, 0.5);">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">Bekræft Oprettelse</h5>
                    <button type="button" class="btn-close" @onclick="AnnullerBekræftelse"></button>
                </div>
                <div class="modal-body">
                    <p>Er du sikker på, at du vil oprette følgende kunde?</p>
                    <ul>
                        <li><strong>Navn:</strong> @nyKunde.Navn</li>
                        <li><strong>Email:</strong> @nyKunde.Email</li>
                        <li><strong>Telefon:</strong> @nyKunde.Telefonnummer</li>
                        <li><strong>Adresse:</strong> @nyKunde.Adresse</li>
                    </ul>
                </div>
                <div class="modal-footer">
                    <button class="btn btn-success" @onclick="OpretEnKunde">Ja, opret</button>
                    <button class="btn btn-secondary" @onclick="AnnullerBekræftelse">Annuller</button>
                </div>
            </div>
        </div>
    </div>
}

@if (fejlbesked != null)
{
    <div class="alert alert-danger mt-3">@fejlbesked</div>
}

@if (succesbesked != null)
{
    <div class="alert alert-success mt-3">@succesbesked</div>
}
<div class="d-flex justify-content-center align-items-center position-relative mt-4" style="height: 200px;">
    <div class="alert border rounded-3 text-center"
         style="max-width: 700px; width: 90%; padding: 20px; background: linear-gradient(to bottom, #1D3557, #457B9D); color: white;">
        <h4 class="fw-bold mb-3">
            <i class="fas fa-motorcycle"></i> Scooterland
        </h4>
        <div class="d-flex justify-content-between">
            <div class="text-start">
                <p class="mb-2">
                    <strong><i class="fas fa-map-marker-alt"></i> Adresse:</strong> Hovedgade 123, 4000 Roskilde
                </p>
                <p class="mb-2">
                    <strong><i class="fas fa-phone-alt"></i> Telefon:</strong> 12 34 56 78
                </p>
            </div>
            <div class="text-start">
                <p class="mb-2">
                    <strong><i class="fas fa-envelope"></i> Email:</strong> kontakt@scooterland.dk
                </p>
                <p class="mb-0">
                    <strong><i class="fas fa-calendar-alt"></i> Dags dato:</strong> @DateTime.Now.ToString("dd-MM-yyyy")
                </p>
            </div>
        </div>
    </div>
</div>

<style>
    .alert {
        background: linear-gradient(to bottom, #1D3557, #457B9D); /* Match farve fra sidebar */
        border: none; /* Fjern kant */
    }

        .alert h4 {
            font-size: 1.75rem; /* Fremhæv overskriften */
            color: white; /* Hvid tekst */
        }

        .alert p {
            font-size: 1rem; /* Læsbar tekst */
            color: white; /* Hvid tekst */
        }

        .alert i {
            margin-right: 8px; /* Plads mellem ikon og tekst */
            color: white; /* Hvid farve til ikoner */
        }

        .alert .text-start {
            flex: 1; /* Fordel pladsen ligeligt */
        }
</style>

@code {
    private Kunde nyKunde = new();
    private List<KundeScooter> scootere = new();
    private bool visBekræftelse = false;
    private string? fejlbesked;
    private string? succesbesked;

    private void TilføjScooter()
    {
        scootere.Add(new KundeScooter());
    }

    private void FjernScooter(KundeScooter scooter)
    {
        scootere.Remove(scooter);
    }

    private void VisBekræftelsesDialog()
    {
        fejlbesked = null;
        succesbesked = null;
        visBekræftelse = true;
    }

    private void AnnullerBekræftelse()
    {
        visBekræftelse = false;
    }

    private async Task OpretEnKunde()
    {
        try
        {
            visBekræftelse = false;
            var response = await Http.PostAsJsonAsync("api/Kunde", nyKunde);

            if (response.IsSuccessStatusCode)
            {
                var oprettetKunde = await response.Content.ReadFromJsonAsync<Kunde>();

                foreach (var scooter in scootere)
                {
                    scooter.KundeId = oprettetKunde.KundeId;
                    await Http.PostAsJsonAsync($"api/KundeScooter/{oprettetKunde.KundeId}/add-scooter", scooter);
                }

                nyKunde = new Kunde();
                scootere.Clear();
                succesbesked = "Kunden og scootere blev oprettet med succes!";
            }
            else
            {
                fejlbesked = "Der opstod en fejl under oprettelse af kunden.";
            }
        }
        catch (Exception ex)
        {
            fejlbesked = $"Fejl: {ex.Message}";
        }
    }
}
