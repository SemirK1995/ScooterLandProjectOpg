@page "/produktydelsecatalog"
@using ScooterLandProjectOpg.Shared.Models
@inject HttpClient Http

<div class="card shadow mb-4">
</div>
	<div class="card-header bg-primary text-white">
		<h3 class="card-title text-center mb-0">Produkt og Ydelse Katalog</h3>
	</div>
<style>
	.nav-tabs .nav-link {
		color: #495057; /* Neutral mørk farve for inaktive tabs */
		background-color: #f8f9fa; /* Lys baggrund */
		border: 1px solid #dee2e6; /* Standard grå kant */
		font-weight: bold; /* Fremhæv teksten */
		border-radius: 0.5rem; /* Afrundede hjørner */
		padding: 10px 20px; /* God størrelse for klikbarhed */
		transition: all 0.3s ease; /* Glidende effekt */
		text-align: center;
		box-shadow: none; /* Fjern skygge for inaktive tabs */
	}

		.nav-tabs .nav-link:hover {
			background-color: #007bff; /* Blå hover-baggrund */
			color: #fff; /* Hvid tekst ved hover */
			border-color: #0056b3; /* Mørkere blå kant */
			transform: scale(1.05); /* Let forstørrelse ved hover */
			box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.2); /* Skygge */
		}

		.nav-tabs .nav-link.active {
			color: #fff; /* Hvid tekst for aktiv tab */
			background-color: #007bff; /* Blå baggrund for aktiv tab */
			border-color: #0056b3; /* Mørkere blå kant */
			font-size: 18px; /* Gør aktiv tab lidt større */
			box-shadow: 0px 4px 8px rgba(0, 0, 0, 0.3); /* Mere fremhævet skygge */
		}

		.nav-tabs .nav-link:not(.active) {
			background-color: #e2e6ea; /* Lys grå baggrund for inaktive tabs */
			color: #343a40; /* Mørk tekstfarve */
			border-color: #ced4da; /* Lys kant for inaktive tabs */
			opacity: 1; /* Fuld synlighed */
			font-size: 16px; /* Ensartet tekststørrelse */
			box-shadow: 0px 2px 4px rgba(0, 0, 0, 0.1); /* Svag skygge */
		}

	.nav-tabs {
		justify-content: center; /* Centrer tabs */
		margin-bottom: 20px; /* Mellemrum under tabs */
	}
</style>

<!-- Tabs navigation -->
<ul class="nav nav-tabs d-flex">
	<li class="nav-item">
		<a class="nav-link @(aktivTab == "ydelser" ? "active" : "")" @onclick="@(() => AktivTabSkift("ydelser"))">
			Ydelser
		</a>
	</li>
	<li class="nav-item">
		<a class="nav-link @(aktivTab == "produkter" ? "active" : "")" @onclick="@(() => AktivTabSkift("produkter"))">
			Produkter
		</a>
	</li>
</ul>


	


<div class="tab-content mt-4">
	@if (aktivTab == "ydelser")
	{
		<div>
			<div class="d-flex justify-content-center mb-4">
				<button class="btn custom-btn" @onclick="VisOpretYdelseModal">Opret Ydelse</button>
			</div>
			@if (ydelser == null)
			{
				<div class="text-center">
					<p>Loading ydelser...</p>
				</div>
			}
			else
			{
				<table class="table table-hover table-striped shadow-sm">
					<thead class="table-light">
						<tr>
							<th>ID</th>
							<th>Navn</th>
							<th>Standard Pris</th>
							<th>Handlinger</th>
						</tr>
					</thead>
					<tbody>
						@foreach (var ydelse in ydelser)
						{
							<tr>
								<td>@ydelse.YdelseId</td>
								<td>@ydelse.Navn</td>
								<td>@ydelse.StandardPris?.ToString("F2") kr.</td>
								<td>
									<div class="d-flex justify-content-evenly">
										<button class="btn btn-primary btn-sm" @onclick="() => VisRedigerYdelseModal(ydelse)">Rediger</button>
										<button class="btn btn-danger btn-sm" @onclick="() => BekræftSletYdelse(ydelse)">Slet</button>
									</div>


								</td>
							</tr>
						}
					</tbody>
				</table>
			}
		</div>
	}
	else if (aktivTab == "produkter")
	{
		<div>
			<div class="d-flex justify-content-center mb-4">
				<button class="btn custom-btn" @onclick="VisOpretProduktModal">Opret Produkt</button>
			</div>
			@if (produkter == null)
			{
				<div class="text-center">
					<p>Loading produkter...</p>
				</div>
			}
			else
			{
				<table class="table table-hover table-striped shadow-sm">
					<thead class="table-light">
						<tr>
							<th>ID</th>
							<th>Navn</th>
							<th>Pris</th>
							<th>Lager Antal</th>
							<th>Handlinger</th>
						</tr>
					</thead>
					<tbody>
						@foreach (var produkt in produkter)
						{
							<tr>
								<td>@produkt.ProduktId</td>
								<td>@produkt.ProduktNavn</td>
								<td>@produkt.Pris?.ToString("F2") kr.</td>
								<td>@produkt.Antal</td>
								<td>
									<button class="btn btn-primary rounded-pill px-3" @onclick="() => VisRedigerProduktModal(produkt)">Rediger</button>
									<button class="btn btn-danger rounded-pill px-3" @onclick="() => BekræftSletProdukt(produkt)">Slet</button>
								</td>
							</tr>
						}
					</tbody>
				</table>
			}
		</div>
	}
</div>

<style>
	.custom-btn {
		background: linear-gradient(to bottom, #4f81bd, #1f4e79); /* Samme gradient som boksen */
		color: white; /* Tekstfarve */
		border: none; /* Fjern kant */
		border-radius: 25px; /* Afrundede hjørner */
		padding: 10px 20px; /* Størrelse på knappen */
		font-size: 16px; /* Tekststørrelse */
		box-shadow: 0px 4px 6px rgba(0, 0, 0, 0.2); /* Skygge */
		transition: all 0.3s ease-in-out; /* Glidende hover-effekt */
	}

		.custom-btn:hover {
			background: linear-gradient(to bottom, #1f4e79, #4f81bd); /* Omvendt gradient på hover */
			transform: scale(1.1); /* Gør knappen lidt større */
			box-shadow: 0px 6px 8px rgba(0, 0, 0, 0.3); /* Mere markant skygge */
		}
</style>

@if (visYdelseModal)
{
	<EditForm Model="valgtYdelse" OnValidSubmit="GemYdelse">
		<div class="modal fade show d-block" tabindex="-1" style="background-color: rgba(0, 0, 0, 0.5);">
			<div class="modal-dialog modal-dialog-centered">
				<div class="modal-content shadow">
					<div class="modal-header bg-primary text-white">
						<h5 class="modal-title">@ydelseModalTitel</h5>
						<button type="button" class="btn-close btn-close-white" @onclick="LukYdelseModal"></button>
					</div>
					<div class="modal-body">
						<DataAnnotationsValidator />
						<div class="mb-3">
							<label for="navn" class="form-label">Navn</label>
							<InputText id="navn" @bind-Value="valgtYdelse.Navn" class="form-control" placeholder="Indtast ydelsesnavn" />
							<ValidationMessage For="@(() => valgtYdelse.Navn)" />
						</div>
						<div class="mb-3">
							<label for="pris" class="form-label">Standard Pris</label>
							<InputNumber id="pris" @bind-Value="valgtYdelse.StandardPris" class="form-control" placeholder="Indtast standard pris" />
							<ValidationMessage For="@(() => valgtYdelse.StandardPris)" />
						</div>
					</div>
					<div class="modal-footer d-flex justify-content-end">
						<button type="button" class="btn btn-secondary rounded-pill px-4 me-2" @onclick="LukYdelseModal">Annuller</button>
						<button type="submit" class="btn btn-success rounded-pill px-4">Gem</button>
					</div>
				</div>
			</div>
		</div>
	</EditForm>
}

@if (visProduktModal)
{
	<EditForm Model="valgtProdukt" OnValidSubmit="GemProdukt">
		<div class="modal fade show d-block" tabindex="-1" style="background-color: rgba(0, 0, 0, 0.5);">
			<div class="modal-dialog modal-dialog-centered">
				<div class="modal-content shadow">
					<div class="modal-header bg-primary text-white">
						<h5 class="modal-title">@produktModalTitel</h5>
						<button type="button" class="btn-close btn-close-white" @onclick="LukProduktModal"></button>
					</div>
					<div class="modal-body">
						<DataAnnotationsValidator />
						<div class="mb-3">
							<label for="navn" class="form-label">Navn</label>
							<InputText id="navn" @bind-Value="valgtProdukt.ProduktNavn" class="form-control" placeholder="Indtast produktnavn" />
							<ValidationMessage For="@(() => valgtProdukt.ProduktNavn)" />
						</div>
						<div class="mb-3">
							<label for="pris" class="form-label">Pris</label>
							<InputNumber id="pris" @bind-Value="valgtProdukt.Pris" class="form-control" placeholder="Indtast pris" />
							<ValidationMessage For="@(() => valgtProdukt.Pris)" />
						</div>
						<div class="mb-3">
							<label for="antal" class="form-label">Antal</label>
							<InputNumber id="antal" @bind-Value="valgtProdukt.Antal" class="form-control" placeholder="Indtast antal" />
							<ValidationMessage For="@(() => valgtProdukt.Antal)" />
						</div>
					</div>
					<div class="modal-footer d-flex justify-content-end">
						<button type="button" class="btn btn-secondary rounded-pill px-4 me-2" @onclick="LukProduktModal">Annuller</button>
						<button type="submit" class="btn btn-success rounded-pill px-4">Gem</button>
					</div>
				</div>
			</div>
		</div>
	</EditForm>
}


@if (visBekræftSletModal)
{
	<div class="modal fade show d-block" tabindex="-1" style="background-color: rgba(0, 0, 0, 0.5);">
		<div class="modal-dialog modal-dialog-centered">
			<div class="modal-content shadow">
				<div class="modal-header bg-danger text-white">
					<h5 class="modal-title">Bekræft Sletning</h5>
					<button type="button" class="btn-close btn-close-white" @onclick="LukBekræftSletModal"></button>
				</div>
				<div class="modal-body text-center">
					<p class="fs-5">Er du sikker på, at du vil slette <strong>@bekræftModalTitel</strong>?</p>
				</div>
				<div class="modal-footer d-flex justify-content-center">
					<button class="btn btn-secondary rounded-pill px-4 me-2" @onclick="LukBekræftSletModal">Annuller</button>
					<button class="btn btn-danger rounded-pill px-4" @onclick="BekræftSlet">Ja, Slet</button>
				</div>
			</div>
		</div>
	</div>
}

<div class="d-flex justify-content-center align-items-center position-relative mt-4" style="height: 200px;">
	<div class="alert border rounded-3 text-center"
		 style="max-width: 700px; width: 90%; padding: 20px; background: linear-gradient(to bottom, #1D3557, #457B9D); color: white;">
		<h4 class="fw-bold mb-3">
			<i class="fas fa-motorcycle"></i> Scooterland
		</h4>
		<div class="d-flex justify-content-between">
			<div class="text-start">
				<p class="mb-2">
					<strong><i class="fas fa-map-marker-alt"></i> Adresse:</strong> Hovedgade 123, 4000 Roskilde
				</p>
				<p class="mb-2">
					<strong><i class="fas fa-phone-alt"></i> Telefon:</strong> 12 34 56 78
				</p>
			</div>
			<div class="text-start">
				<p class="mb-2">
					<strong><i class="fas fa-envelope"></i> Email:</strong> kontakt@scooterland.dk
				</p>
				<p class="mb-0">
					<strong><i class="fas fa-calendar-alt"></i> Dags dato:</strong> @DateTime.Now.ToString("dd-MM-yyyy")
				</p>
			</div>
		</div>
	</div>
</div>

<style>
	.alert {
		background: linear-gradient(to bottom, #1D3557, #457B9D); /* Match farve fra sidebar */
		border: none; /* Fjern kant */
	}

		.alert h4 {
			font-size: 1.75rem; /* Fremhæv overskriften */
			color: white; /* Hvid tekst */
		}

		.alert p {
			font-size: 1rem; /* Læsbar tekst */
			color: white; /* Hvid tekst */
		}

		.alert i {
			margin-right: 8px; /* Plads mellem ikon og tekst */
			color: white; /* Hvid farve til ikoner */
		}

		.alert .text-start {
			flex: 1; /* Fordel pladsen ligeligt */
		}
</style>
<link rel="stylesheet" href="css/ScooterAnimation.css">

<div class="scooter-container">

	<svg class="scooter" xmlns="http://www.w3.org/2000/svg" width="100" height="100" viewBox="0 0 128 128" style="transform: scaleX(-1);">

		<path fill="#ea6c3a" d="M109.4 59.1h8.8c2 0 3.5 1.6 3.5 3.5c0 2-1.6 3.5-3.5 3.5h-8.8z" />
		<path fill="#fac136" d="M29.6 25.3c-.4 2.8-1.1 8.1-1.5 10.9c-.2 1.1-1.4 1.8-2.4 1.3c-2.9-1.4-4.7-4.5-4.2-7.8s3.1-5.8 6.2-6.4c1.1-.2 2.1.8 1.9 2" />
		<circle cx="19.4" cy="90.2" r="17.5" fill="#2f2f2f" />
		<circle cx="19.4" cy="90.2" r="9.7" fill="#65878d" />
		<circle cx="97.7" cy="90.2" r="17.5" fill="#2f2f2f" />
		<circle cx="97.7" cy="90.2" r="9.7" fill="#65878d" />
		<path fill="#47c0e5" d="M95.7 54.7h.2c2.1.1 31.3 2.8 31.3 34.6c0 1.9-1.6 3.5-3.5 3.5H51.6c-7.6 0-14.7-3.3-19.7-9l-9.6-11.1c-1.3-1.5-1.8-3.5-1.4-5.5c2-9.1 5.9-17.7 11.6-25.2l1.8-2.4h7.5l-7 28.9c.5 8.7 7.8 15.5 16.5 15.6h12.3c5.6 0 10.1-4.5 10.1-10.1c0-3.5-1.8-6.7-4.8-8.6L63 61.7c-1.2-.8-2-2.2-2-3.6v-3.5h34.7z" />
		<path fill="#bae9f3" d="M94.6 62.1q-.15 0 0 0c-.8 0-1.4.7-1.4 1.4c0 .8.6 1.4 1.4 1.4c12.3 0 22.2 9.9 22.2 22.2c0 .8.6 1.4 1.4 1.4s1.4-.6 1.4-1.4c0-13.8-11.2-25-25-25" />
		<path fill="#2f2f2f" d="M66.2 58.5L61 56.1c-.8-.4-1.3-1.2-1.3-2c0-4.7 3.8-8.6 8.6-8.6h14.5c4.9 0 9.9-.3 14.8-1c4.8-.4 8.8 3.4 8.8 8.2v3.4c0 1.1-.9 2.1-2.1 2.1l-30.8 1.3c-2.5.5-5 .1-7.3-1m43.5-31.1l-.1.2c-1.8 2.7-2.8 5.8-2.8 9v2c0 .9.6 1.8 1.5 2.1l1.2.4c1.1.3 2.3-.3 2.7-1.4l3-9.9c.4-1.2-.3-2.4-1.5-2.7l-1.7-.5c-.9-.3-1.8 0-2.3.8" />
		<path fill="#2f2f2f" d="M115.5 30c.6.2.9.8.7 1.4l-5.7 20.2c-.5 1.9-2 3.5-3.8 4.2l-2.5 1v-2.5l.6-.2c2-.7 3.5-2.3 4.1-4.4l5.2-19c.2-.5.8-.9 1.4-.7" />
		<path fill="#47c0e5" d="M42.7 37.4L44 33c.4-1.2 0-2.6-1-3.4L38.8 26c-1.7-1.4-3.8-2.3-6-2.5l-6.5-.5c-.5 0-.9.2-1.1.6l-.8 1.8c-1.3 2.9-1.9 6-1.7 9.1l.1 1.7c0 .5.4.9.9 1l4.3.6c3.4.5 5.5 4 4.2 7.3l8.6-1.7z" />
		<path fill="#2f2f2f" d="M38.4 26s-1.8-.8-2.8 1.7c-1 2.4 1.1 4.6 1.1 4.6l7.5 2.5c1.5.5 3.1-.5 3.4-2.1c.2-1.1-.4-2.2-1.4-2.7z" />
		<path fill="#47c0e5" d="M3 83.7h4.5c10.3.1 20.3 3.4 28.8 9.4c1.4 1 3.3-.1 3.2-1.9c-.1-2.2-.5-5.2-1.6-8.3c-2-6-6.2-11.3-12.8-13.1c-13.7-3.7-21 5.5-23.9 10.6c-.7 1.6.3 3.3 1.8 3.3" />
		<path fill="none" stroke="#bae9f3" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2.5" d="M15 74.4s7.2-2.4 13.1 2.1c4 3 5.3 7.3 5.3 7.3" />
	</svg>

</div>


@code {
	private string aktivTab = "ydelser";
	private List<Ydelse>? ydelser;
	private List<Produkt>? produkter;
	private Ydelse valgtYdelse = new();
	private Produkt valgtProdukt = new();
	private bool visYdelseModal = false;
	private bool visProduktModal = false;
	private string ydelseModalTitel = "";
	private string produktModalTitel = "";
	private bool visBekræftSletModal = false;
	private string bekræftModalTitel = "";
	private int? idTilSletning = null;
	private string aktivTypeTilSletning = ""; // "ydelse" eller "produkt"

	protected override async Task OnInitializedAsync()
	{
		await HentYdelser();
		await HentProdukter();
	}

	private async Task HentYdelser() => ydelser = await Http.GetFromJsonAsync<List<Ydelse>>("api/Ydelse");
	private async Task HentProdukter() => produkter = await Http.GetFromJsonAsync<List<Produkt>>("api/Produkt");

	private void AktivTabSkift(string tab) => aktivTab = tab;

	private void VisOpretYdelseModal()
	{
		valgtYdelse = new();
		ydelseModalTitel = "Opret Ydelse";
		visYdelseModal = true;
	}

	private void VisRedigerYdelseModal(Ydelse ydelse)
	{
		valgtYdelse = ydelse;
		ydelseModalTitel = "Rediger Ydelse";
		visYdelseModal = true;
	}

	private void LukYdelseModal() => visYdelseModal = false;

	private async Task GemYdelse()
	{
		if (valgtYdelse.YdelseId == 0)
		{
			await Http.PostAsJsonAsync("api/Ydelse", valgtYdelse);
		}
		else
		{
			await Http.PutAsJsonAsync($"api/Ydelse/{valgtYdelse.YdelseId}", valgtYdelse);
		}
		await HentYdelser();
		LukYdelseModal();
	}

	private void BekræftSletYdelse(Ydelse ydelse)
	{
		bekræftModalTitel = ydelse.Navn ?? "ukendt ydelse";
		idTilSletning = ydelse.YdelseId;
		aktivTypeTilSletning = "ydelse";
		visBekræftSletModal = true;
	}

	private void VisOpretProduktModal()
	{
		valgtProdukt = new();
		produktModalTitel = "Opret Produkt";
		visProduktModal = true;
	}

	private void VisRedigerProduktModal(Produkt produkt)
	{
		valgtProdukt = produkt;
		produktModalTitel = "Rediger Produkt";
		visProduktModal = true;
	}

	private void LukProduktModal() => visProduktModal = false;

	private async Task GemProdukt()
	{
		if (valgtProdukt.ProduktId == 0)
		{
			await Http.PostAsJsonAsync("api/Produkt", valgtProdukt);
		}
		else
		{
			await Http.PutAsJsonAsync($"api/Produkt/{valgtProdukt.ProduktId}", valgtProdukt);
		}
		await HentProdukter();
		LukProduktModal();
	}

	private void BekræftSletProdukt(Produkt produkt)
	{
		bekræftModalTitel = produkt.ProduktNavn ?? "ukendt produkt";
		idTilSletning = produkt.ProduktId;
		aktivTypeTilSletning = "produkt";
		visBekræftSletModal = true;
	}

	private void LukBekræftSletModal()
	{
		visBekræftSletModal = false;
		idTilSletning = null;
		aktivTypeTilSletning = "";
	}

	private async Task BekræftSlet()
	{
		if (idTilSletning != null)
		{
			if (aktivTypeTilSletning == "ydelse")
			{
				await Http.DeleteAsync($"api/Ydelse/{idTilSletning}");
				await HentYdelser();
			}
			else if (aktivTypeTilSletning == "produkt")
			{
				await Http.DeleteAsync($"api/Produkt/{idTilSletning}");
				await HentProdukter();
			}
		}
		LukBekræftSletModal();
	}
}
