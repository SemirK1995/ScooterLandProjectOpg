@page "/lejeaftalekatalog"
@using ScooterLandProjectOpg.Shared.Models
@inject HttpClient Http

<div class="card mb-4 shadow">
    <div class="card-header bg-primary text-white text-center">
        <h3 class="card-title m-0">Lejeaftale Katalog</h3>
    </div>
    <div class="card-body">
        <div class="mb-3">
            <input type="text" class="form-control mb-3 rounded-pill" placeholder="Søg efter Kunde ID, Leje ID eller Kundens Navn"
                   @bind="søgeFelt" @onkeypress="HandleSearchKeyPress" />
            <div class="d-flex justify-content-center">
                <button class="btn btn-primary rounded-pill me-2 px-4" @onclick="SøgLejeAftaler">Søg</button>
                <button class="btn btn-secondary rounded-pill px-4" @onclick="ResetSøgning">Nulstil</button>
            </div>
        </div>
    </div>
</div>

@if (lejeAftaler == null)
{
	<div class="alert alert-info text-center">
		Indlæser lejeaftaler...
	</div>
}
else if (!lejeAftaler.Any())
{
	<div class="alert alert-warning text-center">
		Ingen lejeaftaler fundet.
	</div>
}
else
{
	<div class="table-responsive shadow-sm rounded">
		<table class="table table-striped table-hover align-middle">
			<thead class="table-primary text-center">
				<tr>
					<th>Leje ID</th>
					<th>Kunde ID</th>
					<th>Kunde Navn</th>
					<th>Startdato</th>
					<th>Slutdato</th>
					<th>Kørte Kilometer</th>
					<th>Daglig Leje</th>
					<th>Selvrisiko</th>
					<th>Total Pris</th>
					<th>Handlinger</th>
				</tr>
			</thead>
			<tbody>
				@foreach (var lejeAftale in lejeAftaler)
				{
					<tr class="text-center">
						<td>@lejeAftale.LejeId</td>
						<td>@lejeAftale.KundeId</td>
						<td>@lejeAftale.Kunde?.Navn</td>
						<td>@lejeAftale.StartDato?.ToString("dd-MM-yyyy")</td>
						<td>@lejeAftale.SlutDato?.ToString("dd-MM-yyyy")</td>
						<td>
							<input type="number" class="form-control form-control-sm mx-auto"
								   style="max-width: 120px;"
								   value="@lejeAftale.KortKilometer"
								   @oninput="async e => await OpdaterKortKilometer(lejeAftale.LejeId, int.TryParse(e.Value.ToString(), out var result) ? result : lejeAftale.KortKilometer)" />
						</td>
						<td>@lejeAftale.DagligLeje.ToString("F2") kr.</td>
						<td>
							<input type="checkbox" class="form-check-input"
								   checked="@(lejeAftale.Selvrisiko > 0)"
								   @onchange="async e =>
                                   {
                                   await OpdaterSelvrisiko(lejeAftale.LejeId, (bool)((ChangeEventArgs)e).Value ? 1000 : 0);
                                   await HentLejeAftaler();
                                   }" />
						</td>
						<td>@lejeAftale.TotalPris.ToString("F2") kr.</td>
						<td>
							<button class="btn btn-primary btn-sm me-2" @onclick="() => VisDetaljer(lejeAftale.LejeId)">Vis Detaljer</button>

						</td>
					</tr>
				}
			</tbody>
		</table>
	</div>
}

@if (visDetaljerModal)
{
	<div class="modal fade show d-block" tabindex="-1" style="background-color: rgba(0, 0, 0, 0.5);">
		<div class="modal-dialog modal-lg modal-dialog-centered">
			<div class="modal-content shadow">
				<div class="modal-header bg-primary text-white">
					<h5 class="modal-title">Detaljer for Lejeaftale</h5>
					<button type="button" class="btn-close btn-close-white" @onclick="LukDetaljerModal"></button>
				</div>
				<div class="modal-body">
					<div class="row">
						<div class="col-md-6">
							<p><strong>Leje ID:</strong> @valgtLejeAftale?.LejeId</p>
							<p><strong>Kunde ID:</strong> @valgtLejeAftale?.KundeId</p>
							<p><strong>Kunde Navn:</strong> @valgtLejeAftale?.Kunde?.Navn</p>
							<p><strong>Startdato:</strong> @valgtLejeAftale?.StartDato?.ToString("dd-MM-yyyy")</p>
							<p><strong>Slutdato:</strong> @valgtLejeAftale?.SlutDato?.ToString("dd-MM-yyyy")</p>
						</div>
						<div class="col-md-6">
							<p><strong>Daglig Leje:</strong> @valgtLejeAftale?.DagligLeje kr.</p>
							<p><strong>Forsikringspris:</strong> @valgtLejeAftale?.ForsikringsPris kr.</p>
							<p><strong>Kilometer Pris:</strong> @valgtLejeAftale?.KilometerPris kr.</p>
							<p><strong>Kørte Kilometer:</strong> @valgtLejeAftale?.KortKilometer</p>
							<p><strong>Selvrisiko:</strong> @valgtLejeAftale?.Selvrisiko kr.</p>
							<p><strong>Total Pris:</strong> @valgtLejeAftale?.TotalPris kr.</p>
						</div>
					</div>
					<hr />
					@if (valgtLejeAftale?.LejeScooter != null && valgtLejeAftale.LejeScooter.Any())
					{
						<h6 class="fw-bold text-primary">Leje Scooter Detaljer:</h6>
						<ul class="list-group list-group-flush">
							@foreach (var scooter in valgtLejeAftale.LejeScooter)
							{
								<li class="list-group-item">
									<strong>Mærke:</strong> @scooter.ScooterMaerke,
									<strong>Model:</strong> @scooter.ScooterModel
								</li>
							}
						</ul>
					}
					else
					{
						<p class="text-muted text-center">Ingen scootere er knyttet til denne lejeaftale.</p>
					}
				</div>
				<div class="modal-footer d-flex justify-content-center">
					<button class="btn btn-secondary rounded-pill px-4" @onclick="LukDetaljerModal">Luk</button>
				</div>
			</div>
		</div>
	</div>
}
<div class="d-flex justify-content-center align-items-center position-relative mt-4" style="height: 200px;">
	<div class="alert border rounded-3 text-center"
		 style="max-width: 700px; width: 90%; padding: 20px; background: linear-gradient(to bottom, #1D3557, #457B9D); color: white;">
		<h4 class="fw-bold mb-3">
			<i class="fas fa-motorcycle"></i> Scooterland
		</h4>
		<div class="d-flex justify-content-between">
			<div class="text-start">
				<p class="mb-2">
					<strong><i class="fas fa-map-marker-alt"></i> Adresse:</strong> Hovedgade 123, 4000 Roskilde
				</p>
				<p class="mb-2">
					<strong><i class="fas fa-phone-alt"></i> Telefon:</strong> 12 34 56 78
				</p>
			</div>
			<div class="text-start">
				<p class="mb-2">
					<strong><i class="fas fa-envelope"></i> Email:</strong> kontakt@scooterland.dk
				</p>
				<p class="mb-0">
					<strong><i class="fas fa-calendar-alt"></i> Dags dato:</strong> @DateTime.Now.ToString("dd-MM-yyyy")
				</p>
			</div>
		</div>
	</div>
</div>

<style>
	.alert {
		background: linear-gradient(to bottom, #1D3557, #457B9D); /* Match farve fra sidebar */
		border: none; /* Fjern kant */
	}

		.alert h4 {
			font-size: 1.75rem; /* Fremhæv overskriften */
			color: white; /* Hvid tekst */
		}

		.alert p {
			font-size: 1rem; /* Læsbar tekst */
			color: white; /* Hvid tekst */
		}

		.alert i {
			margin-right: 8px; /* Plads mellem ikon og tekst */
			color: white; /* Hvid farve til ikoner */
		}

		.alert .text-start {
			flex: 1; /* Fordel pladsen ligeligt */
		}
</style>



@code {
	private List<LejeAftale> lejeAftaler = new List<LejeAftale>();
	private LejeAftale? valgtLejeAftale;
	private string søgeFelt = string.Empty;
	private bool visDetaljerModal = false;

	protected override async Task OnInitializedAsync()
	{
		await HentLejeAftaler();
	}

	private async Task HentLejeAftaler()
	{
		lejeAftaler = await Http.GetFromJsonAsync<List<LejeAftale>>("api/LejeAftale");
	}

	private async Task SøgLejeAftaler()
	{
		if (string.IsNullOrWhiteSpace(søgeFelt))
		{
			await HentLejeAftaler();
		}
		else
		{
			lejeAftaler = await Http.GetFromJsonAsync<List<LejeAftale>>($"api/LejeAftale/search?query={søgeFelt}");
		}
	}

	private void ResetSøgning()
	{
		søgeFelt = string.Empty;
		_ = HentLejeAftaler();
	}

	private async Task OpdaterSelvrisiko(int lejeId, double selvrisiko)
	{
		var response = await Http.PutAsJsonAsync($"api/LejeAftale/{lejeId}/selvrisiko", selvrisiko);
		if (response.IsSuccessStatusCode)
		{
			await HentLejeAftaler();
		}
	}

	private async Task OpdaterKortKilometer(int lejeId, int? kortKilometer)
	{
		var response = await Http.PutAsJsonAsync($"api/LejeAftale/{lejeId}/kilometer", kortKilometer);
		if (response.IsSuccessStatusCode)
		{
			await HentLejeAftaler();
		}
	}

	private void VisDetaljer(int lejeId)
	{
		valgtLejeAftale = lejeAftaler.FirstOrDefault(l => l.LejeId == lejeId);
		visDetaljerModal = true;
	}

	private void LukDetaljerModal()
	{
		visDetaljerModal = false;
	}

	private async Task HandleSearchKeyPress(KeyboardEventArgs e)
	{
		if (e.Key == "Enter")
		{
			await SøgLejeAftaler();
		}
	}
}
