@page "/lejeaftalekatalog"
@using ScooterLandProjectOpg.Shared.Models
@inject HttpClient Http

@* Opretter et card-element med margin nederst og en skyggeeffekt. *@
<div class="card mb-4 shadow">
    @* Card-header med blå baggrund, hvid tekst og centreret indhold. *@
    <div class="card-header bg-primary text-white text-center">
        @* Overskrift for kortet, hvor vi kalder det "Lejeaftale Katalog". *@
        <h3 class="card-title m-0">Lejeaftale Katalog</h3>
    </div>
    @* Cardets body-sektion, hvor indholdet placeres. *@
    <div class="card-body">
        @* Et div med margin i bunden til søgefelt og søge-/nulstil-knapper. *@
        <div class="mb-3">
            @* Et tekstfelt bundet til 'søgeFelt'-variablen. Vores metode 'HandleSearchKeyPress' håndterer tastetryk. *@
            <input type="text" class="form-control mb-3 rounded-pill" placeholder="Søg efter Kunde ID, Leje ID eller Kundens Navn"
                   @bind="søgeFelt" @onkeypress="HandleSearchKeyPress" />

            @* Et flex-container, der centrerer indholdet vandret. *@
            <div class="d-flex justify-content-center">
                @* En knap, der ved klik kalder 'SøgLejeAftaler' for at udføre søgningen. *@
                <button class="btn btn-primary rounded-pill me-2 px-4" @onclick="SøgLejeAftaler">Søg</button>
                @* En knap, der nulstiller søgefeltet og kalder 'ResetSøgning'. *@
                <button class="btn btn-secondary rounded-pill px-4" @onclick="ResetSøgning">Nulstil</button>
            </div>
        </div>
    </div>
</div>

@if (lejeAftaler == null)
{
    @* Viser en blå info-boks, hvis 'lejeAftaler' endnu ikke er hentet (null). *@
    <div class="alert alert-info text-center">
        Indlæser lejeaftaler...
    </div>
}
else if (!lejeAftaler.Any())
{
    @* Viser en gul advarsels-boks, hvis listen er tom efter hentning. *@
    <div class="alert alert-warning text-center">
        Ingen lejeaftaler fundet.
    </div>
}
else
{
    @* En container, der gør tabellen responsiv med skygge og afrundede hjørner. *@
    <div class="table-responsive shadow-sm rounded">
        @* Tabellen har striber, hover-effekt og centrering af cellernes lodrette indhold. *@
        <table class="table table-striped table-hover align-middle">
            @* Tabelhoved med blå baggrund og centreret tekst. *@
            <thead class="table-primary text-center">
                <tr>
                    @* Kolonneoverskrift for Leje ID. *@
                    <th>Leje ID</th>
                    @* Kolonneoverskrift for Kunde ID. *@
                    <th>Kunde ID</th>
                    @* Kolonneoverskrift for kundens navn. *@
                    <th>Kunde Navn</th>
                    @* Kolonneoverskrift for startdato for leje. *@
                    <th>Startdato</th>
                    @* Kolonneoverskrift for slutdato for leje. *@
                    <th>Slutdato</th>
                    @* Kolonneoverskrift for antallet af kørte kilometer. *@
                    <th>Kørte Kilometer</th>
                    @* Kolonneoverskrift for prisen pr. dag. *@
                    <th>Daglig Leje</th>
                    @* Kolonneoverskrift for selvrisiko-indikatoren. *@
                    <th>Selvrisiko</th>
                    @* Kolonneoverskrift for lejeaftalens status. *@
                    <th>Leje Status</th>
                    @* Kolonneoverskrift for den samlede pris. *@
                    <th>Total Pris</th>
                    @* Kolonneoverskrift for knapper til handlinger (f.eks. detaljer). *@
                    <th>Handlinger</th>
                </tr>
            </thead>
            <tbody>
                @* Gennemløber hver lejeaftale i listen. *@
                @foreach (var lejeAftale in lejeAftaler)
                {
                    @* Hver række centreres i tabellen. *@
                    <tr class="text-center">
                        @* Viser Leje ID. *@
                        <td>@lejeAftale.LejeId</td>
                        @* Viser Kunde ID. *@
                        <td>@lejeAftale.KundeId</td>
                        @* Viser kundens navn, hvis Kunde-objektet er sat. *@
                        <td>@lejeAftale.Kunde?.Navn</td>
                        @* Viser StartDato i dd-MM-yyyy-format (ellers null). *@
                        <td>@lejeAftale.StartDato?.ToString("dd-MM-yyyy")</td>
                        @* Viser SlutDato i dd-MM-yyyy-format (ellers null). *@
                        <td>@lejeAftale.SlutDato?.ToString("dd-MM-yyyy")</td>
                        <td>
                            @* Et lille inputfelt til kørte kilometer, kalder 'OpdaterKortKilometer' ved ændring. *@
                            <input type="number" class="form-control form-control-sm mx-auto"
                                   style="max-width: 120px;"
                                   value="@lejeAftale.KortKilometer"
                                   @oninput="async e => await OpdaterKortKilometer(lejeAftale.LejeId ?? 0, int.TryParse(e.Value.ToString(), out var result) ? result : lejeAftale.KortKilometer)" />
                        </td>
                        @* Viser DagligLeje med to decimaler og "kr." bagefter. *@
                        <td>@lejeAftale.DagligLeje.ToString("F2") kr.</td>
                        <td>
                            @* En checkbox, hvor 'true' sætter selvrisiko til 1000, 'false' sætter den til 0, og henter listen igen. *@
                            <input type="checkbox" class="form-check-input"
                                   checked="@(lejeAftale.Selvrisiko > 0)"
                                   @onchange="async e =>
                                   {
                                       await OpdaterSelvrisiko(lejeAftale.LejeId ?? 0, (bool)((ChangeEventArgs)e).Value ? 1000 : 0);
                                       await HentLejeAftaler();
                                   }" />
                        </td>
                        @* Viser aftalens status (f.eks. Aktiv, Udløbet). *@
                        <td>@lejeAftale.Status</td>
                        @* Viser den samlede pris med to decimaler, efterfulgt af "kr.". *@
                        <td>@lejeAftale.TotalPris.ToString("F2") kr.</td>
                        <td>
                            @* En lille blå knap, der ved klik kalder 'VisDetaljer' for at åbne modal med info. *@
                            <button class="btn btn-primary btn-sm me-2" @onclick="() => VisDetaljer(lejeAftale.LejeId ?? 0)">Vis Detaljer</button>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
}

@* Modal der vises, når brugeren klikker på "Vis Detaljer". *@
@if (visDetaljerModal)
{
    @* Baggrundsoverlay med let mørktoning. *@
    <div class="modal fade show d-block" tabindex="-1" style="background-color: rgba(0, 0, 0, 0.5);">
        @* Modal-dialog i stor størrelse og centreret vertikalt. *@
        <div class="modal-dialog modal-lg modal-dialog-centered">
            @* Selve modalindholdet med en skygge. *@
            <div class="modal-content shadow">
                @* Modalens header med blå baggrund og hvid tekst. *@
                <div class="modal-header bg-primary text-white">
                    @* Titel for modalen. *@
                    <h5 class="modal-title">Detaljer for Lejeaftale</h5>
                    @* Hvid lukke-knap, der kalder 'LukDetaljerModal' ved klik. *@
                    <button type="button" class="btn-close btn-close-white" @onclick="LukDetaljerModal"></button>
                </div>
                @* Modalens indhold, viser detaljer om den valgte lejeaftale. *@
                <div class="modal-body">
                    @* En række til inddeling i to kolonner. *@
                    <div class="row">
                        @* Venstre kolonne. *@
                        <div class="col-md-6">
                            <p><strong>Leje ID:</strong> @valgtLejeAftale?.LejeId</p>
                            <p><strong>Kunde ID:</strong> @valgtLejeAftale?.KundeId</p>
                            <p><strong>Kunde Navn:</strong> @valgtLejeAftale?.Kunde?.Navn</p>
                            <p><strong>Startdato:</strong> @valgtLejeAftale?.StartDato?.ToString("dd-MM-yyyy")</p>
                            <p><strong>Slutdato:</strong> @valgtLejeAftale?.SlutDato?.ToString("dd-MM-yyyy")</p>
                        </div>
                        @* Højre kolonne. *@
                        <div class="col-md-6">
                            <p><strong>Daglig Leje:</strong> @valgtLejeAftale?.DagligLeje kr.</p>
                            <p><strong>Forsikringspris:</strong> @valgtLejeAftale?.ForsikringsPris kr.</p>
                            <p><strong>Kilometer Pris:</strong> @valgtLejeAftale?.KilometerPris kr.</p>
                            <p><strong>Kørte Kilometer:</strong> @valgtLejeAftale?.KortKilometer</p>
                            <p><strong>Selvrisiko:</strong> @valgtLejeAftale?.Selvrisiko kr.</p>
                            <p><strong>Total Pris:</strong> @valgtLejeAftale?.TotalPris kr.</p>
                        </div>
                    </div>
                    <hr />
                    @if (valgtLejeAftale?.LejeScooter != null && valgtLejeAftale.LejeScooter.Any())
                    {
                        @* Viser detaljer om scootere knyttet til lejeaftalen. *@
                        <h6 class="fw-bold text-primary">Leje Scooter Detaljer:</h6>
                        <ul class="list-group list-group-flush">
                            @foreach (var scooter in valgtLejeAftale.LejeScooter)
                            {
                                <li class="list-group-item">
                                    <strong>Mærke:</strong> @scooter.ScooterMaerke,
                                    <strong>Model:</strong> @scooter.ScooterModel
                                </li>
                            }
                        </ul>
                    }
                    else
                    {
                        @* Hvis der ingen scootere er tilknyttet, vis en besked. *@
                        <p class="text-muted text-center">Ingen scootere er knyttet til denne lejeaftale.</p>
                    }
                </div>
                @* Modal-footer, hvor vi har en luk-knap i midten. *@
                <div class="modal-footer d-flex justify-content-center">
                    @* Knap, der kalder 'LukDetaljerModal' for at lukke modalvinduet. *@
                    <button class="btn btn-secondary rounded-pill px-4" @onclick="LukDetaljerModal">Luk</button>
                </div>
            </div>
        </div>
    </div>
}

@* En container med en bestemt højde, top-margin, og flex-centrering. *@
<div class="d-flex justify-content-center align-items-center position-relative mt-4" style="height: 200px;">
    @* En "alert"-boks med afrundet kant og hvid tekst. *@
    <div class="alert border rounded-3 text-center"
         style="max-width: 700px; width: 90%; padding: 20px; background: linear-gradient(to bottom, #1D3557, #457B9D); color: white;">
        @* Overskrift med et ikon. *@
        <h4 class="fw-bold mb-3">
            <i class="fas fa-motorcycle"></i> Scooterland
        </h4>
        @* Fordeler info i to kolonner ved hjælp af flex. *@
        <div class="d-flex justify-content-between">
            <div class="text-start">
                <p class="mb-2">
                    <strong><i class="fas fa-map-marker-alt"></i> Adresse:</strong> Hovedgade 123, 4000 Roskilde
                </p>
                <p class="mb-2">
                    <strong><i class="fas fa-phone-alt"></i> Telefon:</strong> 12 34 56 78
                </p>
            </div>
            <div class="text-start">
                <p class="mb-2">
                    <strong><i class="fas fa-envelope"></i> Email:</strong> kontakt@scooterland.dk
                </p>
                <p class="mb-0">
                    <strong><i class="fas fa-calendar-alt"></i> Dags dato:</strong> @DateTime.Now.ToString("dd-MM-yyyy")
                </p>
            </div>
        </div>
    </div>
</div>

<style>
    @* CSS for .alert, der giver en gradient og ingen kant. *@
    .alert {
        background: linear-gradient(to bottom, #1D3557, #457B9D); /* Match farve fra sidebar */
        border: none; /* Fjern kant */
    }

    .alert h4 {
        font-size: 1.75rem; /* Fremhæv overskriften */
        color: white; /* Hvid tekst */
    }

    .alert p {
        font-size: 1rem; /* Læsbar tekst */
        color: white; /* Hvid tekst */
    }

    .alert i {
        margin-right: 8px; /* Plads mellem ikon og tekst */
        color: white; /* Hvid farve til ikoner */
    }

    .alert .text-start {
        flex: 1; /* Fordel pladsen ligeligt */
    }
</style>

@* Linker til en ekstern CSS-fil, der håndterer animation af scooter-elementet. *@
<link rel="stylesheet" href="css/ScooterAnimation.css" />

@* En container, hvor den animerede scooter-SVG skal placeres. *@
<div class="scooter-container">
    @* SVG'en er spejlvendt ved hjælp af scaleX(-1). *@
    <svg class="scooter" xmlns="http://www.w3.org/2000/svg" width="100" height="100" viewBox="0 0 128 128" style="transform: scaleX(-1);">

        @* Den første sti i scooter-grafikken. *@
        <path fill="#ea6c3a" d="M109.4 59.1h8.8c2 0 3.5 1.6 3.5 3.5c0 2-1.6 3.5-3.5 3.5h-8.8z" />
        @* Illustrerer en del af scooterens forende i en gul farve. *@
        <path fill="#fac136" d="M29.6 25.3c-.4 2.8-1.1 8.1-1.5 10.9c-.2 1.1-1.4 1.8-2.4 1.3c-2.9-1.4-4.7-4.5-4.2-7.8s3.1-5.8 6.2-6.4c1.1-.2 2.1.8 1.9 2" />
        @* Forhjul i mørk grå. *@
        <circle cx="19.4" cy="90.2" r="17.5" fill="#2f2f2f" />
        @* Forhjulets indre del i en lysere grå. *@
        <circle cx="19.4" cy="90.2" r="9.7" fill="#65878d" />
        @* Baghjul i mørk grå. *@
        <circle cx="97.7" cy="90.2" r="17.5" fill="#2f2f2f" />
        @* Baghjulets indre del i en lysere grå. *@
        <circle cx="97.7" cy="90.2" r="9.7" fill="#65878d" />
        @* Blå del af scooterens karosseri. *@
        <path fill="#47c0e5" d="M95.7 54.7h.2c2.1.1 31.3 2.8 31.3 34.6c0 1.9-1.6 3.5-3.5 3.5H51.6c-7.6 0-14.7-3.3-19.7-9l-9.6-11.1c-1.3-1.5-1.8-3.5-1.4-5.5c2-9.1 5.9-17.7 11.6-25.2l1.8-2.4h7.5l-7 28.9c.5 8.7 7.8 15.5 16.5 15.6h12.3c5.6 0 10.1-4.5 10.1-10.1c0-3.5-1.8-6.7-4.8-8.6L63 61.7c-1.2-.8-2-2.2-2-3.6v-3.5h34.7z" />
        @* Lyseblå markering, muligvis en refleksion eller kontur. *@
        <path fill="#bae9f3" d="M94.6 62.1q-.15 0 0 0c-.8 0-1.4.7-1.4 1.4c0 .8.6 1.4 1.4 1.4c12.3 0 22.2 9.9 22.2 22.2c0 .8.6 1.4 1.4 1.4s1.4-.6 1.4-1.4c0-13.8-11.2-25-25-25" />
        @* Mørkere detaljer. *@
        <path fill="#2f2f2f" d="M66.2 58.5L61 56.1c-.8-.4-1.3-1.2-1.3-2c0-4.7 3.8-8.6 8.6-8.6h14.5c4.9 0 9.9-.3 14.8-1c4.8-.4 8.8 3.4 8.8 8.2v3.4c0 1.1-.9 2.1-2.1 2.1l-30.8 1.3c-2.5.5-5 .1-7.3-1m43.5-31.1l-.1.2c-1.8 2.7-2.8 5.8-2.8 9v2c0 .9.6 1.8 1.5 2.1l1.2.4c1.1.3 2.3-.3 2.7-1.4l3-9.9c.4-1.2-.3-2.4-1.5-2.7l-1.7-.5c-.9-.3-1.8 0-2.3.8" />
        @* Sort del på scooterens side. *@
        <path fill="#2f2f2f" d="M115.5 30c.6.2.9.8.7 1.4l-5.7 20.2c-.5 1.9-2 3.5-3.8 4.2l-2.5 1v-2.5l.6-.2c2-.7 3.5-2.3 4.1-4.4l5.2-19c.2-.5.8-.9 1.4-.7" />
        @* Blå sektion omkring scooterens front. *@
        <path fill="#47c0e5" d="M42.7 37.4L44 33c.4-1.2 0-2.6-1-3.4L38.8 26c-1.7-1.4-3.8-2.3-6-2.5l-6.5-.5c-.5 0-.9.2-1.1.6l-.8 1.8c-1.3 2.9-1.9 6-1.7 9.1l.1 1.7c0 .5.4.9.9 1l4.3.6c3.4.5 5.5 4 4.2 7.3l8.6-1.7z" />
        @* Lidt mørkere del i fronten. *@
        <path fill="#2f2f2f" d="M38.4 26s-1.8-.8-2.8 1.7c-1 2.4 1.1 4.6 1.1 4.6l7.5 2.5c1.5.5 3.1-.5 3.4-2.1c.2-1.1-.4-2.2-1.4-2.7z" />
        @* Bageste blå del, muligvis en streg til vej eller baggrund. *@
        <path fill="#47c0e5" d="M3 83.7h4.5c10.3.1 20.3 3.4 28.8 9.4c1.4 1 3.3-.1 3.2-1.9c-.1-2.2-.5-5.2-1.6-8.3c-2-6-6.2-11.3-12.8-13.1c-13.7-3.7-21 5.5-23.9 10.6c-.7 1.6.3 3.3 1.8 3.3" />
        @* En streg, der kunne indikere bevægelse eller kontur. *@
        <path fill="none" stroke="#bae9f3" stroke-linecap="round" stroke-miterlimit="10" stroke-width="2.5" d="M15 74.4s7.2-2.4 13.1 2.1c4 3 5.3 7.3 5.3 7.3" />
    </svg>
</div>

@code {
    // Liste over LejeAftale-objekter, som vises på siden.
    private List<LejeAftale> lejeAftaler = new List<LejeAftale>();

    // Et objekt til den aktuelt valgte lejeaftale, som vises i detaljer.
    private LejeAftale? valgtLejeAftale;

    // Tekstfeltet til søgning.
    private string søgeFelt = string.Empty;

    // Styrer, om detaljer-modal for en lejeaftale er synlig.
    private bool visDetaljerModal = false;

    // Lifecycle-metoden, der kører, når komponenten initialiseres.
    protected override async Task OnInitializedAsync()
    {
        await HentLejeAftaler(); // Hent alle lejeaftaler fra API ved opstart.
    }

    // Henter en liste af LejeAftale-objekter fra "api/LejeAftale".
    private async Task HentLejeAftaler()
    {
        lejeAftaler = await Http.GetFromJsonAsync<List<LejeAftale>>("api/LejeAftale");
    }

    // Søger lejeaftaler ved enten at kalde standard-endpointet eller et søge-endpoint.
    private async Task SøgLejeAftaler()
    {
        if (string.IsNullOrWhiteSpace(søgeFelt))
        {
            await HentLejeAftaler(); // Hvis søgefeltet er tomt, hent alle.
        }
        else
        {
            lejeAftaler = await Http.GetFromJsonAsync<List<LejeAftale>>($"api/LejeAftale/search?query={søgeFelt}");
        }
    }

    // Nulstiller søgeteksten og genindlæser alle lejeaftaler.
    private void ResetSøgning()
    {
        søgeFelt = string.Empty;
        _ = HentLejeAftaler();
    }

    // Opdaterer selvrisiko for en lejeaftale (lejeId) via PUT-kald, henter listen igen ved succes.
    private async Task OpdaterSelvrisiko(int lejeId, double selvrisiko)
    {
        var response = await Http.PutAsJsonAsync($"api/LejeAftale/{lejeId}/selvrisiko", selvrisiko);
        if (response.IsSuccessStatusCode)
        {
            await HentLejeAftaler();
        }
    }

    // Opdaterer kørte kilometer for en lejeaftale via PUT-kald, og opdaterer derefter lokalt.
    private async Task OpdaterKortKilometer(int lejeId, int? kortKilometer)
    {
        var response = await Http.PutAsJsonAsync($"api/LejeAftale/{lejeId}/kilometer", kortKilometer);
        if (response.IsSuccessStatusCode)
        {
            var lejeAftale = lejeAftaler.FirstOrDefault(l => l.LejeId == lejeId);
            if (lejeAftale != null)
            {
                lejeAftale.KortKilometer = kortKilometer;
                // Hvis prisen skal genberegnes her, kan man gøre det lokalt før StateHasChanged.
                StateHasChanged();
            }
        }
    }

    // Viser detaljer om en lejeaftale (finder den ud fra lejeId) i en modal.
    private void VisDetaljer(int lejeId)
    {
        valgtLejeAftale = lejeAftaler.FirstOrDefault(l => l.LejeId == lejeId);
        visDetaljerModal = true;
    }

    // Lukker detaljer-modal for lejeaftale.
    private void LukDetaljerModal()
    {
        visDetaljerModal = false;
    }

    // Gør det muligt at trykke Enter i søgefeltet for at søge.
    private async Task HandleSearchKeyPress(KeyboardEventArgs e)
    {
        if (e.Key == "Enter")
        {
            await SøgLejeAftaler();
        }
    }
}
