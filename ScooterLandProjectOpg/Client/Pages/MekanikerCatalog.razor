@page "/mekanikercatalog"
@using ScooterLandProjectOpg.Shared.Models
@using ScooterLandProjectOpg.Shared.DTO
@inject HttpClient Http

<h3>Mekaniker Katalog</h3>

@if (mekanikere == null)
{
	<p>Loading...</p>
}
else
{
	<button class="btn btn-success mb-3" @onclick="VisOpretModal">Opret Mekaniker</button>

	<table class="table">
		<thead>
			<tr>
				<th>ID</th>
				<th>Navn</th>
				<th>Speciale</th>
				<th>Telefonnummer</th>
				<th>Handlinger</th>
			</tr>
		</thead>
		<tbody>
			@foreach (var mekaniker in mekanikere)
			{
				<tr>
					<td>@mekaniker.MekanikerId</td>
					<td>@mekaniker.Navn</td>
					<td>@mekaniker.Speciale</td>
					<td>@mekaniker.Telefonnummer</td>
					<td>
						<button class="btn btn-primary" @onclick="() => VisRedigerModal(mekaniker)">Rediger</button>
						<button class="btn btn-secondary" @onclick="() => VisTildelModal(mekaniker)">Book arbejdsopgave</button>
						<button class="btn btn-info" @onclick="() => VisArbejdsopgaverModal(mekaniker)">Se arbejdsopgaver</button>
					</td>
				</tr>
			}
		</tbody>
	</table>
}
<!-- Modal for visning af arbejdsopgaver -->
@if (visArbejdsopgaverModal)
{
	<div class="modal fade show d-block" tabindex="-1" style="background-color: rgba(0, 0, 0, 0.5);">
		<div class="modal-dialog modal-lg">
			<div class="modal-content">
				<div class="modal-header">
					<h5 class="modal-title">Arbejdsopgaver for @valgtMekaniker.Navn</h5>
					<button type="button" class="btn-close" @onclick="LukArbejdsopgaverModal"></button>
				</div>
				<div class="modal-body">
					@if (string.IsNullOrEmpty(emptyMessage))
					{
						<table class="table">
							<thead>
								<tr>
									<th>Ydelse</th>
									<th>Startdato</th>
									<th>Slutdato</th>
									<th>Scooter</th>
									<th>Planlagte Timer</th>
								</tr>
							</thead>
							<tbody>
								@foreach (var opgave in arbejdsopgaver)
								{
									<tr>
										<td>@opgave.Ydelse?.Navn</td>
										<td>@opgave.StartDato?.ToString("dd-MM-yyyy")</td>
										<td>@opgave.SlutDato?.ToString("dd-MM-yyyy")</td>
										<td>@($"{opgave.Scooter?.Maerke} {opgave.Scooter?.Model}")</td>
										<td>@opgave.Timer</td>
									</tr>
								}
							</tbody>
						</table>
					}
					else
					{
						<p>@emptyMessage</p>
					}
				</div>
				<div class="modal-footer">
					<button class="btn btn-secondary" @onclick="LukArbejdsopgaverModal">Luk</button>
				</div>
			</div>
		</div>
	</div>
}


<!-- Modal for oprettelse/redigering -->
@if (visModal)
{
	<div class="modal fade show d-block" tabindex="-1" style="background-color: rgba(0, 0, 0, 0.5);">
		<div class="modal-dialog">
			<div class="modal-content">
				<div class="modal-header">
					<h5 class="modal-title">@modalTitel</h5>
					<button type="button" class="btn-close" @onclick="LukModal"></button>
				</div>
				<div class="modal-body">
					<EditForm Model="valgtMekaniker" OnValidSubmit="GemMekaniker">
						<DataAnnotationsValidator />
						<div>
							<label>Navn:</label>
							<InputText @bind-Value="valgtMekaniker.Navn" class="form-control" />
						</div>
						<div>
							<label>Speciale:</label>
							<InputText @bind-Value="valgtMekaniker.Speciale" class="form-control" />
						</div>
						<div>
							<label>Telefonnummer:</label>
							<InputNumber @bind-Value="valgtMekaniker.Telefonnummer" class="form-control" />
						</div>
					</EditForm>
				</div>
				<div class="modal-footer">
					<button class="btn btn-primary" @onclick="GemMekaniker">Gem</button>
					@if (valgtMekaniker.MekanikerId != 0)
					{
						<button class="btn btn-danger" @onclick="VisBekræftSletningModal">Slet</button>
					}
					<button class="btn btn-secondary" @onclick="LukModal">Annuller</button>
				</div>
			</div>
		</div>
	</div>
}

<!-- Bekræftelsesmodal for sletning -->
@if (visBekræftSletningModal)
{
	<div class="modal fade show d-block" tabindex="-1" style="background-color: rgba(0, 0, 0, 0.5);">
		<div class="modal-dialog">
			<div class="modal-content">
				<div class="modal-header">
					<h5 class="modal-title">Bekræft Sletning</h5>
					<button type="button" class="btn-close" @onclick="LukBekræftSletningModal"></button>
				</div>
				<div class="modal-body">
					<p>Er du sikker på, at du vil slette mekanikeren "@valgtMekaniker.Navn"?</p>
				</div>
				<div class="modal-footer">
					<button class="btn btn-danger" @onclick="SletMekaniker">Ja, Slet</button>
					<button class="btn btn-secondary" @onclick="LukBekræftSletningModal">Annuller</button>
				</div>
			</div>
		</div>
	</div>
}

<!-- Modal for tildeling af ordreydelse -->
@if (visTildelModal)
{
	<div class="modal fade show d-block" tabindex="-1" style="background-color: rgba(0, 0, 0, 0.5);">
		<div class="modal-dialog modal-xl">
			<div class="modal-content">
				<div class="modal-header">
					<h5 class="modal-title">Tilføj arbejdsopgave til @mekanikerTilTildeling.Navn</h5>
					<button type="button" class="btn-close" @onclick="LukTildelModal"></button>
				</div>
				<div class="modal-body" style="overflow-x: auto; max-height: 500px;">
					<div class="table-responsive">
						<table class="table" style="table-layout: auto;">
							<thead>
								<tr>
									<th style="width: 10%;">Ordre Ydelse ID</th>
									<th style="width: 20%;">Ydelse</th>
									<th style="width: 20%;">Scooter</th>
									<th style="width: 15%;">Startdato</th>
									<th style="width: 15%;">Slutdato</th>
									<th style="width: 10%;">Timer</th>
									<th style="width: 10%;">Handling</th>
								</tr>
							</thead>
							<tbody>
								@foreach (var ordreYdelse in ordreYdelser)
								{
									<tr>
										<td>@ordreYdelse.OrdreYdelseId</td>
										<td>@ordreYdelse.YdelseNavn</td>
										<td>@ordreYdelse.ScooterMaerke @ordreYdelse.ScooterModel</td>
										<td><InputDate @bind-Value="ordreYdelse.StartDato" class="form-control" style="padding: 2px;" /></td>
										<td><InputDate @bind-Value="ordreYdelse.SlutDato" class="form-control" style="padding: 2px;" /></td>
										<td><InputNumber @bind-Value="ordreYdelse.Timer" class="form-control" style="padding: 2px;" /></td>
										<td><button class="btn btn-primary" @onclick="() => VisBekræftTildelModal(ordreYdelse)">Book</button></td>
									</tr>
								}
							</tbody>
						</table>
					</div>
				</div>
			</div>
		</div>
	</div>
}

<!-- Bekræftelsesmodal for tildeling -->
@if (visBekræftTildelModal)
{
	<div class="modal fade show d-block" tabindex="-1" style="background-color: rgba(0, 0, 0, 0.5);">
		<div class="modal-dialog">
			<div class="modal-content">
				<div class="modal-header">
					<h5 class="modal-title">Bekræft Tildeling</h5>
					<button type="button" class="btn-close" @onclick="LukBekræftTildelModal"></button>
				</div>
				<div class="modal-body">
					<p>Er du sikker på, at du vil tilføje mekanikeren @mekanikerTilTildeling.Navn til ordreydelse: "@ordreYdelseTilBekræftelse?.YdelseNavn"?</p>
				</div>
				<div class="modal-footer">
					<button class="btn btn-danger" @onclick="LukBekræftTildelModal">Annuller</button>
					<button class="btn btn-success" @onclick="BekræftTildel">Bekræft</button>
				</div>
			</div>
		</div>
	</div>
}
<div class="d-flex justify-content-center align-items-center position-relative mt-4" style="height: 150px;">
	<div class="alert alert-light border rounded-3 shadow-sm text-center"
		 style="max-width: 600px; width: 90%; padding: 15px; margin-bottom: 0;">
		<h6 class="text-primary fw-bold mb-2">Scooterland</h6>
		<p class="mb-1"><strong>Adresse:</strong> Hovedgade 123, 4000 Roskilde</p>
		<p class="mb-1"><strong>Telefon:</strong> 12 34 56 78</p>
		<p class="mb-1"><strong>Email:</strong> kontakt@scooterland.dk</p>
		<p class="mb-0"><strong>Dags dato:</strong> @DateTime.Now.ToString("dd-MM-yyyy")</p>
	</div>
</div>

@code {
	private List<Mekaniker>? mekanikere = new List<Mekaniker>();
	private List<OrdreYdelseDto>? ordreYdelser = new List<OrdreYdelseDto>();
	private List<OrdreYdelse>? arbejdsopgaver = new List<OrdreYdelse>();
	private Mekaniker mekanikerMedOpgaver = new Mekaniker();
	private Mekaniker valgtMekaniker = new Mekaniker();
	private Mekaniker mekanikerTilTildeling = new Mekaniker();
	private bool visArbejdsopgaverModal = false;
	private bool visModal = false;
	private bool visBekræftSletningModal = false;
	private bool visTildelModal = false;
	private bool visBekræftTildelModal = false;
	private string modalTitel = "";
	private OrdreYdelseDto? ordreYdelseTilBekræftelse;
	private string? emptyMessage = null;


	protected override async Task OnInitializedAsync()
	{
		await HentAlleMekanikere();
	}

	private async Task HentAlleMekanikere()
	{
		mekanikere = await Http.GetFromJsonAsync<List<Mekaniker>>("api/Mekaniker");
	}
	private async Task VisArbejdsopgaverModal(Mekaniker mekaniker)
	{
		try
		{
			// Hent arbejdsopgaver for mekanikeren
			arbejdsopgaver = await Http.GetFromJsonAsync<List<OrdreYdelse>>($"api/Mekaniker/{mekaniker.MekanikerId}/arbejdsopgaver");

			if (arbejdsopgaver == null || !arbejdsopgaver.Any())
			{
				arbejdsopgaver = new List<OrdreYdelse>(); // Sæt til en tom liste
				emptyMessage = $"Ingen arbejdsopgaver fundet for mekanikeren {mekaniker.Navn}.";
			}
			else
			{
				emptyMessage = null; // Ryd beskeden, hvis der findes data
			}

			valgtMekaniker = mekaniker;
			visArbejdsopgaverModal = true;
		}
		catch (Exception ex)
		{
			Console.WriteLine($"Fejl ved hentning af arbejdsopgaver: {ex.Message}");
		}
	}


	private void LukArbejdsopgaverModal()
	{
		visArbejdsopgaverModal = false;
		arbejdsopgaver = new List<OrdreYdelse>();
	}

	private void VisOpretModal()
	{
		valgtMekaniker = new Mekaniker();
		modalTitel = "Opret Mekaniker";
		visModal = true;
	}

	private void VisRedigerModal(Mekaniker mekaniker)
	{
		valgtMekaniker = new Mekaniker
			{
				MekanikerId = mekaniker.MekanikerId,
				Navn = mekaniker.Navn,
				Speciale = mekaniker.Speciale,
				Telefonnummer = mekaniker.Telefonnummer
			};
		modalTitel = "Rediger Mekaniker";
		visModal = true;
	}

	private void VisBekræftSletningModal()
	{
		visBekræftSletningModal = true;
	}

	private void LukBekræftSletningModal()
	{
		visBekræftSletningModal = false;
	}

	private async Task SletMekaniker()
	{
		if (valgtMekaniker.MekanikerId > 0)
		{
			var response = await Http.DeleteAsync($"api/Mekaniker/{valgtMekaniker.MekanikerId}");
			if (response.IsSuccessStatusCode)
			{
				await HentAlleMekanikere();
			}
		}
		LukModal();
		LukBekræftSletningModal();
	}

	private async Task HentIkkeTildelteOrdreYdelser()
	{
		ordreYdelser = await Http.GetFromJsonAsync<List<OrdreYdelseDto>>("api/ordreydelse/ikke-tildelt");
	}

	private async Task VisTildelModal(Mekaniker mekaniker)
	{
		mekanikerTilTildeling = mekaniker;
		await HentIkkeTildelteOrdreYdelser();
		visTildelModal = true;
	}

	private void LukTildelModal()
	{
		visTildelModal = false;
	}

	private void VisBekræftTildelModal(OrdreYdelseDto ydelse)
	{
		ordreYdelseTilBekræftelse = ydelse;
		visBekræftTildelModal = true;
	}

	private async Task BekræftTildel()
	{
		if (ordreYdelseTilBekræftelse != null)
		{
			var tildelDto = new TildelMekanikerDto
				{
					OrdreYdelseId = ordreYdelseTilBekræftelse.OrdreYdelseId,
					MekanikerId = mekanikerTilTildeling.MekanikerId,
					StartDato = ordreYdelseTilBekræftelse.StartDato,
					SlutDato = ordreYdelseTilBekræftelse.SlutDato,
					Timer = ordreYdelseTilBekræftelse.Timer
				};

			var response = await Http.PutAsJsonAsync("api/OrdreYdelse/tildel", tildelDto);
			if (response.IsSuccessStatusCode)
			{
				await HentIkkeTildelteOrdreYdelser();
			}
			LukBekræftTildelModal();
		}
	}

	private void LukBekræftTildelModal()
	{
		visBekræftTildelModal = false;
	}

	private async Task GemMekaniker()
	{
		if (valgtMekaniker.MekanikerId == 0)
		{
			var response = await Http.PostAsJsonAsync("api/Mekaniker", valgtMekaniker);
			if (response.IsSuccessStatusCode)
			{
				await HentAlleMekanikere();
			}
		}
		else
		{
			var response = await Http.PutAsJsonAsync($"api/Mekaniker/{valgtMekaniker.MekanikerId}", valgtMekaniker);
			if (response.IsSuccessStatusCode)
			{
				await HentAlleMekanikere();
			}
		}
		LukModal();
	}

	private void LukModal()
	{
		visModal = false;
	}
}
